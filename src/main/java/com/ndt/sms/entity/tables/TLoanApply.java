/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanApplyRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 贷款申请
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanApply extends TableImpl<TLoanApplyRecord> {

    private static final long serialVersionUID = 1033565247;

    /**
     * The reference instance of <code>ndt.t_loan_apply</code>
     */
    public static final TLoanApply T_LOAN_APPLY = new TLoanApply();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanApplyRecord> getRecordType() {
        return TLoanApplyRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_apply.id</code>.
     */
    public final TableField<TLoanApplyRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_loan_apply.user_id</code>. 用户ID
     */
    public final TableField<TLoanApplyRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "用户ID");

    /**
     * The column <code>ndt.t_loan_apply.org_id</code>. 意向金融机构
     */
    public final TableField<TLoanApplyRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "意向金融机构");

    /**
     * The column <code>ndt.t_loan_apply.loan_product_id</code>. 意向金融产品
     */
    public final TableField<TLoanApplyRecord, BigDecimal> LOAN_PRODUCT_ID = createField("loan_product_id", org.jooq.impl.SQLDataType.NUMERIC, this, "意向金融产品");

    /**
     * The column <code>ndt.t_loan_apply.apply_purpose</code>. 贷款用途
     */
    public final TableField<TLoanApplyRecord, Integer> APPLY_PURPOSE = createField("apply_purpose", org.jooq.impl.SQLDataType.INTEGER, this, "贷款用途");

    /**
     * The column <code>ndt.t_loan_apply.apply_amount</code>. 贷款金额
     */
    public final TableField<TLoanApplyRecord, BigDecimal> APPLY_AMOUNT = createField("apply_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款金额");

    /**
     * The column <code>ndt.t_loan_apply.apply_amount_unit</code>. 贷款金额单位
     */
    public final TableField<TLoanApplyRecord, Integer> APPLY_AMOUNT_UNIT = createField("apply_amount_unit", org.jooq.impl.SQLDataType.INTEGER, this, "贷款金额单位");

    /**
     * The column <code>ndt.t_loan_apply.apply_term</code>. 贷款期限
     */
    public final TableField<TLoanApplyRecord, Integer> APPLY_TERM = createField("apply_term", org.jooq.impl.SQLDataType.INTEGER, this, "贷款期限");

    /**
     * The column <code>ndt.t_loan_apply.apply_term_unit</code>. 贷款期限单位
     */
    public final TableField<TLoanApplyRecord, Integer> APPLY_TERM_UNIT = createField("apply_term_unit", org.jooq.impl.SQLDataType.INTEGER, this, "贷款期限单位");

    /**
     * The column <code>ndt.t_loan_apply.guarantee_type</code>. 担保方式
     */
    public final TableField<TLoanApplyRecord, Integer[]> GUARANTEE_TYPE = createField("guarantee_type", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "担保方式");

    /**
     * The column <code>ndt.t_loan_apply.guarantee_items</code>. 抵押产权条目
     */
    public final TableField<TLoanApplyRecord, BigDecimal[]> GUARANTEE_ITEMS = createField("guarantee_items", org.jooq.impl.SQLDataType.NUMERIC.getArrayDataType(), this, "抵押产权条目");

    /**
     * The column <code>ndt.t_loan_apply.deadline</code>. 申请截止时间
     */
    public final TableField<TLoanApplyRecord, Timestamp> DEADLINE = createField("deadline", org.jooq.impl.SQLDataType.TIMESTAMP, this, "申请截止时间");

    /**
     * The column <code>ndt.t_loan_apply.period</code>. 申请所处阶段,参考码表大类38
     */
    public final TableField<TLoanApplyRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER, this, "申请所处阶段,参考码表大类38");

    /**
     * The column <code>ndt.t_loan_apply.create_at</code>. 创建时间
     */
    public final TableField<TLoanApplyRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_loan_apply.update_at</code>. 更新时间
     */
    public final TableField<TLoanApplyRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>ndt.t_loan_apply.source_id</code>. 来源,PC app
     */
    public final TableField<TLoanApplyRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER, this, "来源,PC app");

    /**
     * The column <code>ndt.t_loan_apply.audit_state</code>. 县级联席会议审核状态
     */
    public final TableField<TLoanApplyRecord, Integer> AUDIT_STATE = createField("audit_state", org.jooq.impl.SQLDataType.INTEGER, this, "县级联席会议审核状态");

    /**
     * The column <code>ndt.t_loan_apply.audit_opinion</code>. 审核意见
     */
    public final TableField<TLoanApplyRecord, String> AUDIT_OPINION = createField("audit_opinion", org.jooq.impl.SQLDataType.VARCHAR(100), this, "审核意见");

    /**
     * The column <code>ndt.t_loan_apply.audit_time</code>. 审核时间
     */
    public final TableField<TLoanApplyRecord, Timestamp> AUDIT_TIME = createField("audit_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "审核时间");

    /**
     * The column <code>ndt.t_loan_apply.apply_source</code>. 申请来源,7301:ndt,7302:花盟,7303:方米
     */
    public final TableField<TLoanApplyRecord, Integer> APPLY_SOURCE = createField("apply_source", org.jooq.impl.SQLDataType.INTEGER, this, "申请来源,7301:ndt,7302:花盟,7303:方米");

    /**
     * The column <code>ndt.t_loan_apply.company_id</code>. 企业ID
     */
    public final TableField<TLoanApplyRecord, BigDecimal> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.NUMERIC, this, "企业ID");

    /**
     * The column <code>ndt.t_loan_apply.apply_from</code>. 申请来源于(参照码表82)
     */
    public final TableField<TLoanApplyRecord, Integer> APPLY_FROM = createField("apply_from", org.jooq.impl.SQLDataType.INTEGER, this, "申请来源于(参照码表82)");

    /**
     * The column <code>ndt.t_loan_apply.come_from_desc</code>. 信息来源于
     */
    public final TableField<TLoanApplyRecord, String> COME_FROM_DESC = createField("come_from_desc", org.jooq.impl.SQLDataType.VARCHAR(120), this, "信息来源于");

    /**
     * The column <code>ndt.t_loan_apply.base_rate</code>. 基准利率
     */
    public final TableField<TLoanApplyRecord, BigDecimal> BASE_RATE = createField("base_rate", org.jooq.impl.SQLDataType.NUMERIC.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "基准利率");

    /**
     * The column <code>ndt.t_loan_apply.float_prop</code>. 上浮比例
     */
    public final TableField<TLoanApplyRecord, BigDecimal> FLOAT_PROP = createField("float_prop", org.jooq.impl.SQLDataType.NUMERIC.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "上浮比例");

    /**
     * The column <code>ndt.t_loan_apply.cost_amount</code>. 贷款成本
     */
    public final TableField<TLoanApplyRecord, BigDecimal> COST_AMOUNT = createField("cost_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款成本");

    /**
     * The column <code>ndt.t_loan_apply.repayment_amount</code>. 还款
     */
    public final TableField<TLoanApplyRecord, BigDecimal> REPAYMENT_AMOUNT = createField("repayment_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "还款");

    /**
     * The column <code>ndt.t_loan_apply.repayment_method</code>. 还款方式
     */
    public final TableField<TLoanApplyRecord, Integer> REPAYMENT_METHOD = createField("repayment_method", org.jooq.impl.SQLDataType.INTEGER, this, "还款方式");

    /**
     * The column <code>ndt.t_loan_apply.apply_from_id</code>. 申请来源于ID
     */
    public final TableField<TLoanApplyRecord, BigDecimal> APPLY_FROM_ID = createField("apply_from_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请来源于ID");

    /**
     * Create a <code>ndt.t_loan_apply</code> table reference
     */
    public TLoanApply() {
        this(DSL.name("t_loan_apply"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_apply</code> table reference
     */
    public TLoanApply(String alias) {
        this(DSL.name(alias), T_LOAN_APPLY);
    }

    /**
     * Create an aliased <code>ndt.t_loan_apply</code> table reference
     */
    public TLoanApply(Name alias) {
        this(alias, T_LOAN_APPLY);
    }

    private TLoanApply(Name alias, Table<TLoanApplyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanApply(Name alias, Table<TLoanApplyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "贷款申请");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanApplyRecord> getPrimaryKey() {
        return Keys.T_LOAN_APPLY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanApplyRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanApplyRecord>>asList(Keys.T_LOAN_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanApply as(String alias) {
        return new TLoanApply(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanApply as(Name alias) {
        return new TLoanApply(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanApply rename(String name) {
        return new TLoanApply(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanApply rename(Name name) {
        return new TLoanApply(name, null);
    }
}
