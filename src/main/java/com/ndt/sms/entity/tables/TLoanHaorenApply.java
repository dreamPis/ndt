/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanHaorenApplyRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 好人贷申请
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanHaorenApply extends TableImpl<TLoanHaorenApplyRecord> {

    private static final long serialVersionUID = 669953160;

    /**
     * The reference instance of <code>ndt.t_loan_haoren_apply</code>
     */
    public static final TLoanHaorenApply T_LOAN_HAOREN_APPLY = new TLoanHaorenApply();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanHaorenApplyRecord> getRecordType() {
        return TLoanHaorenApplyRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_haoren_apply.id</code>. 唯一id
     */
    public final TableField<TLoanHaorenApplyRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "唯一id");

    /**
     * The column <code>ndt.t_loan_haoren_apply.user_id</code>. 用户id
     */
    public final TableField<TLoanHaorenApplyRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "用户id");

    /**
     * The column <code>ndt.t_loan_haoren_apply.product_id</code>. 产品id
     */
    public final TableField<TLoanHaorenApplyRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "产品id");

    /**
     * The column <code>ndt.t_loan_haoren_apply.apply_time</code>. 创建时间
     */
    public final TableField<TLoanHaorenApplyRecord, Timestamp> APPLY_TIME = createField("apply_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * Create a <code>ndt.t_loan_haoren_apply</code> table reference
     */
    public TLoanHaorenApply() {
        this(DSL.name("t_loan_haoren_apply"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_haoren_apply</code> table reference
     */
    public TLoanHaorenApply(String alias) {
        this(DSL.name(alias), T_LOAN_HAOREN_APPLY);
    }

    /**
     * Create an aliased <code>ndt.t_loan_haoren_apply</code> table reference
     */
    public TLoanHaorenApply(Name alias) {
        this(alias, T_LOAN_HAOREN_APPLY);
    }

    private TLoanHaorenApply(Name alias, Table<TLoanHaorenApplyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanHaorenApply(Name alias, Table<TLoanHaorenApplyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "好人贷申请");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_HAOREN_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanHaorenApplyRecord> getPrimaryKey() {
        return Keys.T_LOAN_HAOREN_APPLY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanHaorenApplyRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanHaorenApplyRecord>>asList(Keys.T_LOAN_HAOREN_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanHaorenApply as(String alias) {
        return new TLoanHaorenApply(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanHaorenApply as(Name alias) {
        return new TLoanHaorenApply(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanHaorenApply rename(String name) {
        return new TLoanHaorenApply(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanHaorenApply rename(Name name) {
        return new TLoanHaorenApply(name, null);
    }
}
