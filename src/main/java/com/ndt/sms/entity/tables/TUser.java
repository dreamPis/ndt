/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TUserRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUser extends TableImpl<TUserRecord> {

    private static final long serialVersionUID = -1262785116;

    /**
     * The reference instance of <code>ndt.t_user</code>
     */
    public static final TUser T_USER = new TUser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserRecord> getRecordType() {
        return TUserRecord.class;
    }

    /**
     * The column <code>ndt.t_user.id</code>.
     */
    public final TableField<TUserRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_user.login_name</code>. 用户表
     */
    public final TableField<TUserRecord, String> LOGIN_NAME = createField("login_name", org.jooq.impl.SQLDataType.VARCHAR(40), this, "用户表");

    /**
     * The column <code>ndt.t_user.salt</code>. SALT
     */
    public final TableField<TUserRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(40), this, "SALT");

    /**
     * The column <code>ndt.t_user.password</code>. 密码
     */
    public final TableField<TUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(100), this, "密码");

    /**
     * The column <code>ndt.t_user.name</code>. 姓名
     */
    public final TableField<TUserRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "姓名");

    /**
     * The column <code>ndt.t_user.gender</code>. 性别
     */
    public final TableField<TUserRecord, Integer> GENDER = createField("gender", org.jooq.impl.SQLDataType.INTEGER, this, "性别");

    /**
     * The column <code>ndt.t_user.mobile</code>. 电话
     */
    public final TableField<TUserRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20), this, "电话");

    /**
     * The column <code>ndt.t_user.image_url</code>. 用户头像
     */
    public final TableField<TUserRecord, String> IMAGE_URL = createField("image_url", org.jooq.impl.SQLDataType.VARCHAR(50), this, "用户头像");

    /**
     * The column <code>ndt.t_user.user_type</code>. 用户类型
     */
    public final TableField<TUserRecord, Integer> USER_TYPE = createField("user_type", org.jooq.impl.SQLDataType.INTEGER, this, "用户类型");

    /**
     * The column <code>ndt.t_user.admin_division_id</code>. 行政区划ID
     */
    public final TableField<TUserRecord, BigDecimal> ADMIN_DIVISION_ID = createField("admin_division_id", org.jooq.impl.SQLDataType.NUMERIC, this, "行政区划ID");

    /**
     * The column <code>ndt.t_user.org_id</code>. 机构ID
     */
    public final TableField<TUserRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "机构ID");

    /**
     * The column <code>ndt.t_user.user_detail_id</code>. 详情信息ID
     */
    public final TableField<TUserRecord, BigDecimal> USER_DETAIL_ID = createField("user_detail_id", org.jooq.impl.SQLDataType.NUMERIC, this, "详情信息ID");

    /**
     * The column <code>ndt.t_user.subscription_types</code>. 订阅信息类型
     */
    public final TableField<TUserRecord, Integer[]> SUBSCRIPTION_TYPES = createField("subscription_types", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "订阅信息类型");

    /**
     * The column <code>ndt.t_user.account_state</code>. 账号状态
     */
    public final TableField<TUserRecord, Integer> ACCOUNT_STATE = createField("account_state", org.jooq.impl.SQLDataType.INTEGER, this, "账号状态");

    /**
     * The column <code>ndt.t_user.status</code>. 记录状态
     */
    public final TableField<TUserRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "记录状态");

    /**
     * The column <code>ndt.t_user.create_by</code>. 创建人
     */
    public final TableField<TUserRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_user.create_at</code>. 创建时间
     */
    public final TableField<TUserRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_user.update_by</code>. 更新人
     */
    public final TableField<TUserRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "更新人");

    /**
     * The column <code>ndt.t_user.update_at</code>. 更新时间
     */
    public final TableField<TUserRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>ndt.t_user.last_login_time</code>. 用户最后登录时间
     */
    public final TableField<TUserRecord, Timestamp> LAST_LOGIN_TIME = createField("last_login_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "用户最后登录时间");

    /**
     * The column <code>ndt.t_user.source_id</code>. 来源,PC app
     */
    public final TableField<TUserRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER, this, "来源,PC app");

    /**
     * The column <code>ndt.t_user.is_farm</code>. 是否是家庭农场
     */
    public final TableField<TUserRecord, Boolean> IS_FARM = createField("is_farm", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "是否是家庭农场");

    /**
     * The column <code>ndt.t_user.is_cooperation</code>. 是否是合作社
     */
    public final TableField<TUserRecord, Boolean> IS_COOPERATION = createField("is_cooperation", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "是否是合作社");

    /**
     * The column <code>ndt.t_user.is_leading_enterprice</code>. 是否是龙头企业
     */
    public final TableField<TUserRecord, Boolean> IS_LEADING_ENTERPRICE = createField("is_leading_enterprice", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "是否是龙头企业");

    /**
     * The column <code>ndt.t_user.is_large_agricultural_family</code>. 是否是农业大户
     */
    public final TableField<TUserRecord, Boolean> IS_LARGE_AGRICULTURAL_FAMILY = createField("is_large_agricultural_family", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "是否是农业大户");

    /**
     * The column <code>ndt.t_user.is_majar_project</code>. 是否是重点扶持项目
     */
    public final TableField<TUserRecord, Boolean> IS_MAJAR_PROJECT = createField("is_majar_project", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "是否是重点扶持项目");

    /**
     * The column <code>ndt.t_user.contact_phone</code>. 非个人用户联系方式
     */
    public final TableField<TUserRecord, String> CONTACT_PHONE = createField("contact_phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "非个人用户联系方式");

    /**
     * Create a <code>ndt.t_user</code> table reference
     */
    public TUser() {
        this(DSL.name("t_user"), null);
    }

    /**
     * Create an aliased <code>ndt.t_user</code> table reference
     */
    public TUser(String alias) {
        this(DSL.name(alias), T_USER);
    }

    /**
     * Create an aliased <code>ndt.t_user</code> table reference
     */
    public TUser(Name alias) {
        this(alias, T_USER);
    }

    private TUser(Name alias, Table<TUserRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUser(Name alias, Table<TUserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserRecord> getPrimaryKey() {
        return Keys.T_USER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserRecord>>asList(Keys.T_USER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUser as(String alias) {
        return new TUser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUser as(Name alias) {
        return new TUser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUser rename(String name) {
        return new TUser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TUser rename(Name name) {
        return new TUser(name, null);
    }
}
