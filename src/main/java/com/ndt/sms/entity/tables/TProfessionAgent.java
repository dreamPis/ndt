/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TProfessionAgentRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 农业职业经纪人
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProfessionAgent extends TableImpl<TProfessionAgentRecord> {

    private static final long serialVersionUID = 2059082796;

    /**
     * The reference instance of <code>ndt.t_profession_agent</code>
     */
    public static final TProfessionAgent T_PROFESSION_AGENT = new TProfessionAgent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProfessionAgentRecord> getRecordType() {
        return TProfessionAgentRecord.class;
    }

    /**
     * The column <code>ndt.t_profession_agent.id</code>. 主键
     */
    public final TableField<TProfessionAgentRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_profession_agent.name</code>. 姓名
     */
    public final TableField<TProfessionAgentRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "姓名");

    /**
     * The column <code>ndt.t_profession_agent.identity_id</code>. 身份证号码
     */
    public final TableField<TProfessionAgentRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR(20), this, "身份证号码");

    /**
     * The column <code>ndt.t_profession_agent.county</code>. 区县
     */
    public final TableField<TProfessionAgentRecord, String> COUNTY = createField("county", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区县");

    /**
     * The column <code>ndt.t_profession_agent.county_code</code>.
     */
    public final TableField<TProfessionAgentRecord, BigDecimal> COUNTY_CODE = createField("county_code", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_profession_agent.town</code>. 乡镇
     */
    public final TableField<TProfessionAgentRecord, String> TOWN = createField("town", org.jooq.impl.SQLDataType.VARCHAR(20), this, "乡镇");

    /**
     * The column <code>ndt.t_profession_agent.town_code</code>.
     */
    public final TableField<TProfessionAgentRecord, BigDecimal> TOWN_CODE = createField("town_code", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_profession_agent.community</code>. 村站
     */
    public final TableField<TProfessionAgentRecord, String> COMMUNITY = createField("community", org.jooq.impl.SQLDataType.VARCHAR(20), this, "村站");

    /**
     * The column <code>ndt.t_profession_agent.community_code</code>.
     */
    public final TableField<TProfessionAgentRecord, BigDecimal> COMMUNITY_CODE = createField("community_code", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_profession_agent.sex</code>. 性别
     */
    public final TableField<TProfessionAgentRecord, Integer> SEX = createField("sex", org.jooq.impl.SQLDataType.INTEGER, this, "性别");

    /**
     * The column <code>ndt.t_profession_agent.company_name</code>. 单位名称
     */
    public final TableField<TProfessionAgentRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "单位名称");

    /**
     * The column <code>ndt.t_profession_agent.position</code>. 职务
     */
    public final TableField<TProfessionAgentRecord, String> POSITION = createField("position", org.jooq.impl.SQLDataType.VARCHAR(20), this, "职务");

    /**
     * The column <code>ndt.t_profession_agent.start_date</code>. 从事农业起始时间
     */
    public final TableField<TProfessionAgentRecord, String> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.VARCHAR(20), this, "从事农业起始时间");

    /**
     * The column <code>ndt.t_profession_agent.industry_type</code>. 产业类别
     */
    public final TableField<TProfessionAgentRecord, String> INDUSTRY_TYPE = createField("industry_type", org.jooq.impl.SQLDataType.VARCHAR(30), this, "产业类别");

    /**
     * The column <code>ndt.t_profession_agent.scope</code>. 规模
     */
    public final TableField<TProfessionAgentRecord, String> SCOPE = createField("scope", org.jooq.impl.SQLDataType.VARCHAR(50), this, "规模");

    /**
     * The column <code>ndt.t_profession_agent.certificate_no</code>. 证书编号
     */
    public final TableField<TProfessionAgentRecord, String> CERTIFICATE_NO = createField("certificate_no", org.jooq.impl.SQLDataType.VARCHAR(40), this, "证书编号");

    /**
     * The column <code>ndt.t_profession_agent.phone</code>. 联系电话
     */
    public final TableField<TProfessionAgentRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话");

    /**
     * The column <code>ndt.t_profession_agent.remark</code>. 备注
     */
    public final TableField<TProfessionAgentRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(200), this, "备注");

    /**
     * The column <code>ndt.t_profession_agent.rating</code>. 评级
     */
    public final TableField<TProfessionAgentRecord, String> RATING = createField("rating", org.jooq.impl.SQLDataType.VARCHAR(20), this, "评级");

    /**
     * The column <code>ndt.t_profession_agent.create_time</code>.
     */
    public final TableField<TProfessionAgentRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_profession_agent.create_user</code>.
     */
    public final TableField<TProfessionAgentRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_profession_agent.update_time</code>.
     */
    public final TableField<TProfessionAgentRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_profession_agent.update_user</code>.
     */
    public final TableField<TProfessionAgentRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_profession_agent.state</code>. 1、未审核，2、审核通过，3、审核不通过
     */
    public final TableField<TProfessionAgentRecord, Short> STATE = createField("state", org.jooq.impl.SQLDataType.SMALLINT, this, "1、未审核，2、审核通过，3、审核不通过");

    /**
     * The column <code>ndt.t_profession_agent.is_major</code>.
     */
    public final TableField<TProfessionAgentRecord, Boolean> IS_MAJOR = createField("is_major", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>ndt.t_profession_agent.is_credit</code>.
     */
    public final TableField<TProfessionAgentRecord, Boolean> IS_CREDIT = createField("is_credit", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>ndt.t_profession_agent</code> table reference
     */
    public TProfessionAgent() {
        this(DSL.name("t_profession_agent"), null);
    }

    /**
     * Create an aliased <code>ndt.t_profession_agent</code> table reference
     */
    public TProfessionAgent(String alias) {
        this(DSL.name(alias), T_PROFESSION_AGENT);
    }

    /**
     * Create an aliased <code>ndt.t_profession_agent</code> table reference
     */
    public TProfessionAgent(Name alias) {
        this(alias, T_PROFESSION_AGENT);
    }

    private TProfessionAgent(Name alias, Table<TProfessionAgentRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProfessionAgent(Name alias, Table<TProfessionAgentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "农业职业经纪人");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PROFESSION_AGENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProfessionAgentRecord> getPrimaryKey() {
        return Keys.T_PROFESSION_AGENT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProfessionAgentRecord>> getKeys() {
        return Arrays.<UniqueKey<TProfessionAgentRecord>>asList(Keys.T_PROFESSION_AGENT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProfessionAgent as(String alias) {
        return new TProfessionAgent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProfessionAgent as(Name alias) {
        return new TProfessionAgent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProfessionAgent rename(String name) {
        return new TProfessionAgent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProfessionAgent rename(Name name) {
        return new TProfessionAgent(name, null);
    }
}
