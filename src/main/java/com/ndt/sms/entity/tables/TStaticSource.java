/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TStaticSourceRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 静态资源对应fastdfs表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TStaticSource extends TableImpl<TStaticSourceRecord> {

    private static final long serialVersionUID = 2147382601;

    /**
     * The reference instance of <code>ndt.t_static_source</code>
     */
    public static final TStaticSource T_STATIC_SOURCE = new TStaticSource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TStaticSourceRecord> getRecordType() {
        return TStaticSourceRecord.class;
    }

    /**
     * The column <code>ndt.t_static_source.id</code>. id
     */
    public final TableField<TStaticSourceRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "id");

    /**
     * The column <code>ndt.t_static_source.name</code>. 静态图片区域名称
     */
    public final TableField<TStaticSourceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "静态图片区域名称");

    /**
     * The column <code>ndt.t_static_source.source_path</code>. 源文件路径
     */
    public final TableField<TStaticSourceRecord, String> SOURCE_PATH = createField("source_path", org.jooq.impl.SQLDataType.VARCHAR(120).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "源文件路径");

    /**
     * The column <code>ndt.t_static_source.target_path</code>. 目的文件路径
     */
    public final TableField<TStaticSourceRecord, String> TARGET_PATH = createField("target_path", org.jooq.impl.SQLDataType.VARCHAR(120).defaultValue(org.jooq.impl.DSL.field("NULL::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "目的文件路径");

    /**
     * The column <code>ndt.t_static_source.source_w</code>. 图片宽
     */
    public final TableField<TStaticSourceRecord, Integer> SOURCE_W = createField("source_w", org.jooq.impl.SQLDataType.INTEGER, this, "图片宽");

    /**
     * The column <code>ndt.t_static_source.source_h</code>. 图片高
     */
    public final TableField<TStaticSourceRecord, Integer> SOURCE_H = createField("source_h", org.jooq.impl.SQLDataType.INTEGER, this, "图片高");

    /**
     * Create a <code>ndt.t_static_source</code> table reference
     */
    public TStaticSource() {
        this(DSL.name("t_static_source"), null);
    }

    /**
     * Create an aliased <code>ndt.t_static_source</code> table reference
     */
    public TStaticSource(String alias) {
        this(DSL.name(alias), T_STATIC_SOURCE);
    }

    /**
     * Create an aliased <code>ndt.t_static_source</code> table reference
     */
    public TStaticSource(Name alias) {
        this(alias, T_STATIC_SOURCE);
    }

    private TStaticSource(Name alias, Table<TStaticSourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private TStaticSource(Name alias, Table<TStaticSourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "静态资源对应fastdfs表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_STATIC_SOURCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TStaticSourceRecord> getPrimaryKey() {
        return Keys.PK_T_STATIC_SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TStaticSourceRecord>> getKeys() {
        return Arrays.<UniqueKey<TStaticSourceRecord>>asList(Keys.PK_T_STATIC_SOURCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStaticSource as(String alias) {
        return new TStaticSource(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStaticSource as(Name alias) {
        return new TStaticSource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TStaticSource rename(String name) {
        return new TStaticSource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TStaticSource rename(Name name) {
        return new TStaticSource(name, null);
    }
}
