/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables.records;


import com.ndt.sms.entity.tables.TSignRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 签到记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSignRecordRecord extends UpdatableRecordImpl<TSignRecordRecord> implements Record4<BigDecimal, Timestamp, BigDecimal, Integer> {

    private static final long serialVersionUID = 1415534066;

    /**
     * Setter for <code>ndt.t_sign_record.user_id</code>. 用户ID
     */
    public TSignRecordRecord setUserId(BigDecimal value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ndt.t_sign_record.user_id</code>. 用户ID
     */
    public BigDecimal getUserId() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>ndt.t_sign_record.sign_date</code>. 签到时间
     */
    public TSignRecordRecord setSignDate(Timestamp value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ndt.t_sign_record.sign_date</code>. 签到时间
     */
    public Timestamp getSignDate() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>ndt.t_sign_record.id</code>. id
     */
    public TSignRecordRecord setId(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ndt.t_sign_record.id</code>. id
     */
    public BigDecimal getId() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>ndt.t_sign_record.continuity_count</code>. 连续签到次数
     */
    public TSignRecordRecord setContinuityCount(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ndt.t_sign_record.continuity_count</code>. 连续签到次数
     */
    public Integer getContinuityCount() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<BigDecimal> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<BigDecimal, Timestamp, BigDecimal, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<BigDecimal, Timestamp, BigDecimal, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field1() {
        return TSignRecord.T_SIGN_RECORD.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return TSignRecord.T_SIGN_RECORD.SIGN_DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field3() {
        return TSignRecord.T_SIGN_RECORD.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return TSignRecord.T_SIGN_RECORD.CONTINUITY_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component2() {
        return getSignDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component3() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getContinuityCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value1() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getSignDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value3() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getContinuityCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecordRecord value1(BigDecimal value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecordRecord value2(Timestamp value) {
        setSignDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecordRecord value3(BigDecimal value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecordRecord value4(Integer value) {
        setContinuityCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecordRecord values(BigDecimal value1, Timestamp value2, BigDecimal value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TSignRecordRecord
     */
    public TSignRecordRecord() {
        super(TSignRecord.T_SIGN_RECORD);
    }

    /**
     * Create a detached, initialised TSignRecordRecord
     */
    public TSignRecordRecord(BigDecimal userId, Timestamp signDate, BigDecimal id, Integer continuityCount) {
        super(TSignRecord.T_SIGN_RECORD);

        set(0, userId);
        set(1, signDate);
        set(2, id);
        set(3, continuityCount);
    }
}
