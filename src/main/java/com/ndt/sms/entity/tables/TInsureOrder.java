/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TInsureOrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 保险订单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TInsureOrder extends TableImpl<TInsureOrderRecord> {

    private static final long serialVersionUID = 1994225796;

    /**
     * The reference instance of <code>ndt.t_insure_order</code>
     */
    public static final TInsureOrder T_INSURE_ORDER = new TInsureOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TInsureOrderRecord> getRecordType() {
        return TInsureOrderRecord.class;
    }

    /**
     * The column <code>ndt.t_insure_order.id</code>.
     */
    public final TableField<TInsureOrderRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_insure_order.u_id</code>. 用户id
     */
    public final TableField<TInsureOrderRecord, BigDecimal> U_ID = createField("u_id", org.jooq.impl.SQLDataType.NUMERIC, this, "用户id");

    /**
     * The column <code>ndt.t_insure_order.identity_card</code>. 身份证号
     */
    public final TableField<TInsureOrderRecord, String> IDENTITY_CARD = createField("identity_card", org.jooq.impl.SQLDataType.VARCHAR(25), this, "身份证号");

    /**
     * The column <code>ndt.t_insure_order.create_time</code>. 创建时间
     */
    public final TableField<TInsureOrderRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_insure_order.apply_way</code>. 申请方式:1微信,2线上
     */
    public final TableField<TInsureOrderRecord, Integer> APPLY_WAY = createField("apply_way", org.jooq.impl.SQLDataType.INTEGER, this, "申请方式:1微信,2线上");

    /**
     * The column <code>ndt.t_insure_order.policy_to</code>. 被保人
     */
    public final TableField<TInsureOrderRecord, String> POLICY_TO = createField("policy_to", org.jooq.impl.SQLDataType.VARCHAR(15), this, "被保人");

    /**
     * The column <code>ndt.t_insure_order.phone</code>. 联系电话
     */
    public final TableField<TInsureOrderRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话");

    /**
     * The column <code>ndt.t_insure_order.policy_holder</code>. 投保人
     */
    public final TableField<TInsureOrderRecord, String> POLICY_HOLDER = createField("policy_holder", org.jooq.impl.SQLDataType.VARCHAR(15), this, "投保人");

    /**
     * The column <code>ndt.t_insure_order.relationship</code>. 投保关系
     */
    public final TableField<TInsureOrderRecord, Integer> RELATIONSHIP = createField("relationship", org.jooq.impl.SQLDataType.INTEGER, this, "投保关系");

    /**
     * The column <code>ndt.t_insure_order.product_id</code>. 产品id
     */
    public final TableField<TInsureOrderRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC, this, "产品id");

    /**
     * The column <code>ndt.t_insure_order.status</code>. 订单状态
     */
    public final TableField<TInsureOrderRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "订单状态");

    /**
     * Create a <code>ndt.t_insure_order</code> table reference
     */
    public TInsureOrder() {
        this(DSL.name("t_insure_order"), null);
    }

    /**
     * Create an aliased <code>ndt.t_insure_order</code> table reference
     */
    public TInsureOrder(String alias) {
        this(DSL.name(alias), T_INSURE_ORDER);
    }

    /**
     * Create an aliased <code>ndt.t_insure_order</code> table reference
     */
    public TInsureOrder(Name alias) {
        this(alias, T_INSURE_ORDER);
    }

    private TInsureOrder(Name alias, Table<TInsureOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private TInsureOrder(Name alias, Table<TInsureOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "保险订单");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_INSURE_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TInsureOrderRecord> getPrimaryKey() {
        return Keys.T_INSURE_ORDER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TInsureOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<TInsureOrderRecord>>asList(Keys.T_INSURE_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TInsureOrder as(String alias) {
        return new TInsureOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TInsureOrder as(Name alias) {
        return new TInsureOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TInsureOrder rename(String name) {
        return new TInsureOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TInsureOrder rename(Name name) {
        return new TInsureOrder(name, null);
    }
}
