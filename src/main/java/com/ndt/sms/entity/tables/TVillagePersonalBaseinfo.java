/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TVillagePersonalBaseinfoRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 农业信用基础信息
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TVillagePersonalBaseinfo extends TableImpl<TVillagePersonalBaseinfoRecord> {

    private static final long serialVersionUID = -861032781;

    /**
     * The reference instance of <code>ndt.t_village_personal_baseinfo</code>
     */
    public static final TVillagePersonalBaseinfo T_VILLAGE_PERSONAL_BASEINFO = new TVillagePersonalBaseinfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TVillagePersonalBaseinfoRecord> getRecordType() {
        return TVillagePersonalBaseinfoRecord.class;
    }

    /**
     * The column <code>ndt.t_village_personal_baseinfo.id</code>.
     */
    public final TableField<TVillagePersonalBaseinfoRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.name</code>. 姓名
     */
    public final TableField<TVillagePersonalBaseinfoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "姓名");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.gender</code>. 性别，参考码表1
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Short> GENDER = createField("gender", org.jooq.impl.SQLDataType.SMALLINT, this, "性别，参考码表1");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.marital_status</code>. 婚姻状态
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> MARITAL_STATUS = createField("marital_status", org.jooq.impl.SQLDataType.INTEGER, this, "婚姻状态");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.birth</code>. 出生年月
     */
    public final TableField<TVillagePersonalBaseinfoRecord, String> BIRTH = createField("birth", org.jooq.impl.SQLDataType.VARCHAR(50), this, "出生年月");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.phone</code>. 联系电话
     */
    public final TableField<TVillagePersonalBaseinfoRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(40), this, "联系电话");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.address</code>. 居住地址
     */
    public final TableField<TVillagePersonalBaseinfoRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(100), this, "居住地址");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.papers_type</code>. 证件类型，参考码表46
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> PAPERS_TYPE = createField("papers_type", org.jooq.impl.SQLDataType.INTEGER, this, "证件类型，参考码表46");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.papers_id</code>. 证件号码
     */
    public final TableField<TVillagePersonalBaseinfoRecord, String> PAPERS_ID = createField("papers_id", org.jooq.impl.SQLDataType.VARCHAR(80), this, "证件号码");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.working_type</code>. 生产经营类型，参考码表47
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> WORKING_TYPE = createField("working_type", org.jooq.impl.SQLDataType.INTEGER, this, "生产经营类型，参考码表47");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.operating_area</code>. 流转经营面积(亩)
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> OPERATING_AREA = createField("operating_area", org.jooq.impl.SQLDataType.INTEGER, this, "流转经营面积(亩)");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.breeding_number</code>. 养殖数量(只/头)
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> BREEDING_NUMBER = createField("breeding_number", org.jooq.impl.SQLDataType.INTEGER, this, "养殖数量(只/头)");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.machine_number</code>. 农机数量(台)
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> MACHINE_NUMBER = createField("machine_number", org.jooq.impl.SQLDataType.INTEGER, this, "农机数量(台)");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.manager_level</code>. 农业职业经理人等级，参考码表48
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> MANAGER_LEVEL = createField("manager_level", org.jooq.impl.SQLDataType.INTEGER, this, "农业职业经理人等级，参考码表48");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.personal_liability_amount</code>. 个人负债金额（万）
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Integer> PERSONAL_LIABILITY_AMOUNT = createField("personal_liability_amount", org.jooq.impl.SQLDataType.INTEGER, this, "个人负债金额（万）");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.status</code>.
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.create_user</code>.
     */
    public final TableField<TVillagePersonalBaseinfoRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.create_time</code>.
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.update_user</code>.
     */
    public final TableField<TVillagePersonalBaseinfoRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.update_time</code>.
     */
    public final TableField<TVillagePersonalBaseinfoRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_village_personal_baseinfo.division_id</code>. 区域id
     */
    public final TableField<TVillagePersonalBaseinfoRecord, BigDecimal> DIVISION_ID = createField("division_id", org.jooq.impl.SQLDataType.NUMERIC, this, "区域id");

    /**
     * Create a <code>ndt.t_village_personal_baseinfo</code> table reference
     */
    public TVillagePersonalBaseinfo() {
        this(DSL.name("t_village_personal_baseinfo"), null);
    }

    /**
     * Create an aliased <code>ndt.t_village_personal_baseinfo</code> table reference
     */
    public TVillagePersonalBaseinfo(String alias) {
        this(DSL.name(alias), T_VILLAGE_PERSONAL_BASEINFO);
    }

    /**
     * Create an aliased <code>ndt.t_village_personal_baseinfo</code> table reference
     */
    public TVillagePersonalBaseinfo(Name alias) {
        this(alias, T_VILLAGE_PERSONAL_BASEINFO);
    }

    private TVillagePersonalBaseinfo(Name alias, Table<TVillagePersonalBaseinfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TVillagePersonalBaseinfo(Name alias, Table<TVillagePersonalBaseinfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "农业信用基础信息");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_VILLAGE_PERSONAL_BASEINFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TVillagePersonalBaseinfoRecord> getPrimaryKey() {
        return Keys.T_VILLAGE_PERSONAL_BASEINFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TVillagePersonalBaseinfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TVillagePersonalBaseinfoRecord>>asList(Keys.T_VILLAGE_PERSONAL_BASEINFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TVillagePersonalBaseinfo as(String alias) {
        return new TVillagePersonalBaseinfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TVillagePersonalBaseinfo as(Name alias) {
        return new TVillagePersonalBaseinfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TVillagePersonalBaseinfo rename(String name) {
        return new TVillagePersonalBaseinfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TVillagePersonalBaseinfo rename(Name name) {
        return new TVillagePersonalBaseinfo(name, null);
    }
}
