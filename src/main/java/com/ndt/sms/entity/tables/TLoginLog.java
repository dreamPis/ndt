/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoginLogRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户登录日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoginLog extends TableImpl<TLoginLogRecord> {

    private static final long serialVersionUID = -1629363610;

    /**
     * The reference instance of <code>ndt.t_login_log</code>
     */
    public static final TLoginLog T_LOGIN_LOG = new TLoginLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoginLogRecord> getRecordType() {
        return TLoginLogRecord.class;
    }

    /**
     * The column <code>ndt.t_login_log.id</code>. 主键
     */
    public final TableField<TLoginLogRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_login_log.user_id</code>. 用户ID
     */
    public final TableField<TLoginLogRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "用户ID");

    /**
     * The column <code>ndt.t_login_log.user_name</code>. 用户名称
     */
    public final TableField<TLoginLogRecord, String> USER_NAME = createField("user_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户名称");

    /**
     * The column <code>ndt.t_login_log.ip</code>. ip地址
     */
    public final TableField<TLoginLogRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR(20), this, "ip地址");

    /**
     * The column <code>ndt.t_login_log.login_date</code>. 时间
     */
    public final TableField<TLoginLogRecord, Timestamp> LOGIN_DATE = createField("login_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "时间");

    /**
     * The column <code>ndt.t_login_log.type</code>. 类型(1，登录、2，登出)
     */
    public final TableField<TLoginLogRecord, Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT, this, "类型(1，登录、2，登出)");

    /**
     * Create a <code>ndt.t_login_log</code> table reference
     */
    public TLoginLog() {
        this(DSL.name("t_login_log"), null);
    }

    /**
     * Create an aliased <code>ndt.t_login_log</code> table reference
     */
    public TLoginLog(String alias) {
        this(DSL.name(alias), T_LOGIN_LOG);
    }

    /**
     * Create an aliased <code>ndt.t_login_log</code> table reference
     */
    public TLoginLog(Name alias) {
        this(alias, T_LOGIN_LOG);
    }

    private TLoginLog(Name alias, Table<TLoginLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoginLog(Name alias, Table<TLoginLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户登录日志表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_LOGIN_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoginLogRecord> getPrimaryKey() {
        return Keys.PK_T_LOGIN_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoginLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoginLogRecord>>asList(Keys.PK_T_LOGIN_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoginLog as(String alias) {
        return new TLoginLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoginLog as(Name alias) {
        return new TLoginLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoginLog rename(String name) {
        return new TLoginLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoginLog rename(Name name) {
        return new TLoginLog(name, null);
    }
}
