/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TVillagePersonalDetailRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 村站个人信息采集表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TVillagePersonalDetail extends TableImpl<TVillagePersonalDetailRecord> {

    private static final long serialVersionUID = 1756968379;

    /**
     * The reference instance of <code>ndt.t_village_personal_detail</code>
     */
    public static final TVillagePersonalDetail T_VILLAGE_PERSONAL_DETAIL = new TVillagePersonalDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TVillagePersonalDetailRecord> getRecordType() {
        return TVillagePersonalDetailRecord.class;
    }

    /**
     * The column <code>ndt.t_village_personal_detail.id</code>.
     */
    public final TableField<TVillagePersonalDetailRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_village_personal_detail.name</code>. 姓名
     */
    public final TableField<TVillagePersonalDetailRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(10), this, "姓名");

    /**
     * The column <code>ndt.t_village_personal_detail.admin_division_id</code>. 行政区ID，参考行政区表
     */
    public final TableField<TVillagePersonalDetailRecord, BigDecimal> ADMIN_DIVISION_ID = createField("admin_division_id", org.jooq.impl.SQLDataType.NUMERIC, this, "行政区ID，参考行政区表");

    /**
     * The column <code>ndt.t_village_personal_detail.mobile</code>. 电话号码
     */
    public final TableField<TVillagePersonalDetailRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20), this, "电话号码");

    /**
     * The column <code>ndt.t_village_personal_detail.identity_id</code>. 身份证
     */
    public final TableField<TVillagePersonalDetailRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR(20), this, "身份证");

    /**
     * The column <code>ndt.t_village_personal_detail.address</code>. 地址
     */
    public final TableField<TVillagePersonalDetailRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(100), this, "地址");

    /**
     * The column <code>ndt.t_village_personal_detail.marital_status</code>. 婚姻状况,参考码表
     */
    public final TableField<TVillagePersonalDetailRecord, Integer> MARITAL_STATUS = createField("marital_status", org.jooq.impl.SQLDataType.INTEGER, this, "婚姻状况,参考码表");

    /**
     * The column <code>ndt.t_village_personal_detail.evaluate</code>. 道德评价,参考码表
     */
    public final TableField<TVillagePersonalDetailRecord, Integer> EVALUATE = createField("evaluate", org.jooq.impl.SQLDataType.INTEGER, this, "道德评价,参考码表");

    /**
     * The column <code>ndt.t_village_personal_detail.badhabits</code>. 不良嗜好描述
     */
    public final TableField<TVillagePersonalDetailRecord, String> BADHABITS = createField("badhabits", org.jooq.impl.SQLDataType.VARCHAR(100), this, "不良嗜好描述");

    /**
     * The column <code>ndt.t_village_personal_detail.is_crimed</code>. 是否有犯罪记录
     */
    public final TableField<TVillagePersonalDetailRecord, Boolean> IS_CRIMED = createField("is_crimed", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否有犯罪记录");

    /**
     * The column <code>ndt.t_village_personal_detail.education</code>. 学历,参考码表
     */
    public final TableField<TVillagePersonalDetailRecord, Integer> EDUCATION = createField("education", org.jooq.impl.SQLDataType.INTEGER, this, "学历,参考码表");

    /**
     * The column <code>ndt.t_village_personal_detail.support_num</code>. 赡养人数
     */
    public final TableField<TVillagePersonalDetailRecord, Short> SUPPORT_NUM = createField("support_num", org.jooq.impl.SQLDataType.SMALLINT, this, "赡养人数");

    /**
     * The column <code>ndt.t_village_personal_detail.monitor_children</code>. 未成年子女数
     */
    public final TableField<TVillagePersonalDetailRecord, Short> MONITOR_CHILDREN = createField("monitor_children", org.jooq.impl.SQLDataType.SMALLINT, this, "未成年子女数");

    /**
     * The column <code>ndt.t_village_personal_detail.status</code>.
     */
    public final TableField<TVillagePersonalDetailRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>ndt.t_village_personal_detail.create_by</code>.
     */
    public final TableField<TVillagePersonalDetailRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_village_personal_detail.create_at</code>.
     */
    public final TableField<TVillagePersonalDetailRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_village_personal_detail.update_by</code>.
     */
    public final TableField<TVillagePersonalDetailRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_village_personal_detail.update_at</code>.
     */
    public final TableField<TVillagePersonalDetailRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>ndt.t_village_personal_detail</code> table reference
     */
    public TVillagePersonalDetail() {
        this(DSL.name("t_village_personal_detail"), null);
    }

    /**
     * Create an aliased <code>ndt.t_village_personal_detail</code> table reference
     */
    public TVillagePersonalDetail(String alias) {
        this(DSL.name(alias), T_VILLAGE_PERSONAL_DETAIL);
    }

    /**
     * Create an aliased <code>ndt.t_village_personal_detail</code> table reference
     */
    public TVillagePersonalDetail(Name alias) {
        this(alias, T_VILLAGE_PERSONAL_DETAIL);
    }

    private TVillagePersonalDetail(Name alias, Table<TVillagePersonalDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private TVillagePersonalDetail(Name alias, Table<TVillagePersonalDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "村站个人信息采集表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_VILLAGE_PERSONAL_DETAIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TVillagePersonalDetailRecord> getPrimaryKey() {
        return Keys.T_VILLAGE_PERSONAL_DETAIL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TVillagePersonalDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<TVillagePersonalDetailRecord>>asList(Keys.T_VILLAGE_PERSONAL_DETAIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TVillagePersonalDetail as(String alias) {
        return new TVillagePersonalDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TVillagePersonalDetail as(Name alias) {
        return new TVillagePersonalDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TVillagePersonalDetail rename(String name) {
        return new TVillagePersonalDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TVillagePersonalDetail rename(Name name) {
        return new TVillagePersonalDetail(name, null);
    }
}
