/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TSmsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 短消息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSms extends TableImpl<TSmsRecord> {

    private static final long serialVersionUID = -1789923740;

    /**
     * The reference instance of <code>ndt.t_sms</code>
     */
    public static final TSms T_SMS = new TSms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TSmsRecord> getRecordType() {
        return TSmsRecord.class;
    }

    /**
     * The column <code>ndt.t_sms.id</code>.
     */
    public final TableField<TSmsRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_sms.message_id</code>. 消息ID
     */
    public final TableField<TSmsRecord, BigDecimal> MESSAGE_ID = createField("message_id", org.jooq.impl.SQLDataType.NUMERIC, this, "消息ID");

    /**
     * The column <code>ndt.t_sms.accept_user_id</code>. 接收者ID
     */
    public final TableField<TSmsRecord, BigDecimal> ACCEPT_USER_ID = createField("accept_user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "接收者ID");

    /**
     * The column <code>ndt.t_sms.mobile</code>. 电话
     */
    public final TableField<TSmsRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20), this, "电话");

    /**
     * The column <code>ndt.t_sms.is_success</code>. 是否成功
     */
    public final TableField<TSmsRecord, Boolean> IS_SUCCESS = createField("is_success", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否成功");

    /**
     * The column <code>ndt.t_sms.send_time</code>. 发送时间
     */
    public final TableField<TSmsRecord, Timestamp> SEND_TIME = createField("send_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "发送时间");

    /**
     * The column <code>ndt.t_sms.reason</code>. 失败原因
     */
    public final TableField<TSmsRecord, String> REASON = createField("reason", org.jooq.impl.SQLDataType.VARCHAR(200), this, "失败原因");

    /**
     * Create a <code>ndt.t_sms</code> table reference
     */
    public TSms() {
        this(DSL.name("t_sms"), null);
    }

    /**
     * Create an aliased <code>ndt.t_sms</code> table reference
     */
    public TSms(String alias) {
        this(DSL.name(alias), T_SMS);
    }

    /**
     * Create an aliased <code>ndt.t_sms</code> table reference
     */
    public TSms(Name alias) {
        this(alias, T_SMS);
    }

    private TSms(Name alias, Table<TSmsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSms(Name alias, Table<TSmsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "短消息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_SMS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TSmsRecord> getPrimaryKey() {
        return Keys.T_SMS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TSmsRecord>> getKeys() {
        return Arrays.<UniqueKey<TSmsRecord>>asList(Keys.T_SMS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSms as(String alias) {
        return new TSms(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSms as(Name alias) {
        return new TSms(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSms rename(String name) {
        return new TSms(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TSms rename(Name name) {
        return new TSms(name, null);
    }
}
