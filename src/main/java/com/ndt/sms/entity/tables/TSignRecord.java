/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TSignRecordRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 签到记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSignRecord extends TableImpl<TSignRecordRecord> {

    private static final long serialVersionUID = 655227733;

    /**
     * The reference instance of <code>ndt.t_sign_record</code>
     */
    public static final TSignRecord T_SIGN_RECORD = new TSignRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TSignRecordRecord> getRecordType() {
        return TSignRecordRecord.class;
    }

    /**
     * The column <code>ndt.t_sign_record.user_id</code>. 用户ID
     */
    public final TableField<TSignRecordRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "用户ID");

    /**
     * The column <code>ndt.t_sign_record.sign_date</code>. 签到时间
     */
    public final TableField<TSignRecordRecord, Timestamp> SIGN_DATE = createField("sign_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "签到时间");

    /**
     * The column <code>ndt.t_sign_record.id</code>. id
     */
    public final TableField<TSignRecordRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "id");

    /**
     * The column <code>ndt.t_sign_record.continuity_count</code>. 连续签到次数
     */
    public final TableField<TSignRecordRecord, Integer> CONTINUITY_COUNT = createField("continuity_count", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this, "连续签到次数");

    /**
     * Create a <code>ndt.t_sign_record</code> table reference
     */
    public TSignRecord() {
        this(DSL.name("t_sign_record"), null);
    }

    /**
     * Create an aliased <code>ndt.t_sign_record</code> table reference
     */
    public TSignRecord(String alias) {
        this(DSL.name(alias), T_SIGN_RECORD);
    }

    /**
     * Create an aliased <code>ndt.t_sign_record</code> table reference
     */
    public TSignRecord(Name alias) {
        this(alias, T_SIGN_RECORD);
    }

    private TSignRecord(Name alias, Table<TSignRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSignRecord(Name alias, Table<TSignRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "签到记录表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_SIGN_RECORD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TSignRecordRecord> getPrimaryKey() {
        return Keys.T_SIGN_RECORD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TSignRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<TSignRecordRecord>>asList(Keys.T_SIGN_RECORD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecord as(String alias) {
        return new TSignRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSignRecord as(Name alias) {
        return new TSignRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSignRecord rename(String name) {
        return new TSignRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TSignRecord rename(Name name) {
        return new TSignRecord(name, null);
    }
}
