/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TStepBaseRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 步骤主表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TStepBase extends TableImpl<TStepBaseRecord> {

    private static final long serialVersionUID = 1880236122;

    /**
     * The reference instance of <code>ndt.t_step_base</code>
     */
    public static final TStepBase T_STEP_BASE = new TStepBase();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TStepBaseRecord> getRecordType() {
        return TStepBaseRecord.class;
    }

    /**
     * The column <code>ndt.t_step_base.id</code>. 主键
     */
    public final TableField<TStepBaseRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_step_base.step_name</code>. 步骤简写名称
     */
    public final TableField<TStepBaseRecord, String> STEP_NAME = createField("step_name", org.jooq.impl.SQLDataType.VARCHAR(40), this, "步骤简写名称");

    /**
     * The column <code>ndt.t_step_base.step_full_name</code>. 步骤全名
     */
    public final TableField<TStepBaseRecord, String> STEP_FULL_NAME = createField("step_full_name", org.jooq.impl.SQLDataType.VARCHAR(80), this, "步骤全名");

    /**
     * The column <code>ndt.t_step_base.step_role</code>. 步骤权限
     */
    public final TableField<TStepBaseRecord, BigDecimal[]> STEP_ROLE = createField("step_role", org.jooq.impl.SQLDataType.NUMERIC.getArrayDataType(), this, "步骤权限");

    /**
     * The column <code>ndt.t_step_base.policy_id</code>. 政策申办ID
     */
    public final TableField<TStepBaseRecord, BigDecimal> POLICY_ID = createField("policy_id", org.jooq.impl.SQLDataType.NUMERIC, this, "政策申办ID");

    /**
     * The column <code>ndt.t_step_base.create_at</code>. 创建时间
     */
    public final TableField<TStepBaseRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_step_base.create_by</code>. 创建人
     */
    public final TableField<TStepBaseRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_step_base.update_at</code>. 修改时间
     */
    public final TableField<TStepBaseRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>ndt.t_step_base.update_by</code>. 修改人
     */
    public final TableField<TStepBaseRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "修改人");

    /**
     * The column <code>ndt.t_step_base.status</code>. 状态
     */
    public final TableField<TStepBaseRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "状态");

    /**
     * The column <code>ndt.t_step_base.sort</code>. 步骤排序
     */
    public final TableField<TStepBaseRecord, Short> SORT = createField("sort", org.jooq.impl.SQLDataType.SMALLINT, this, "步骤排序");

    /**
     * Create a <code>ndt.t_step_base</code> table reference
     */
    public TStepBase() {
        this(DSL.name("t_step_base"), null);
    }

    /**
     * Create an aliased <code>ndt.t_step_base</code> table reference
     */
    public TStepBase(String alias) {
        this(DSL.name(alias), T_STEP_BASE);
    }

    /**
     * Create an aliased <code>ndt.t_step_base</code> table reference
     */
    public TStepBase(Name alias) {
        this(alias, T_STEP_BASE);
    }

    private TStepBase(Name alias, Table<TStepBaseRecord> aliased) {
        this(alias, aliased, null);
    }

    private TStepBase(Name alias, Table<TStepBaseRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "步骤主表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_STEP_BASE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TStepBaseRecord> getPrimaryKey() {
        return Keys.T_STEP_BASE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TStepBaseRecord>> getKeys() {
        return Arrays.<UniqueKey<TStepBaseRecord>>asList(Keys.T_STEP_BASE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStepBase as(String alias) {
        return new TStepBase(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStepBase as(Name alias) {
        return new TStepBase(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TStepBase rename(String name) {
        return new TStepBase(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TStepBase rename(Name name) {
        return new TStepBase(name, null);
    }
}
