/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TFileRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 文件表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFile extends TableImpl<TFileRecord> {

    private static final long serialVersionUID = -894149917;

    /**
     * The reference instance of <code>ndt.t_file</code>
     */
    public static final TFile T_FILE = new TFile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TFileRecord> getRecordType() {
        return TFileRecord.class;
    }

    /**
     * The column <code>ndt.t_file.id</code>.
     */
    public final TableField<TFileRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_file.path</code>. 文件路径
     */
    public final TableField<TFileRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(60), this, "文件路径");

    /**
     * The column <code>ndt.t_file.name</code>. 文件名
     */
    public final TableField<TFileRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "文件名");

    /**
     * The column <code>ndt.t_file.file_type</code>. 文件类型
     */
    public final TableField<TFileRecord, String> FILE_TYPE = createField("file_type", org.jooq.impl.SQLDataType.VARCHAR(10), this, "文件类型");

    /**
     * The column <code>ndt.t_file.size</code>. 文件大小
     */
    public final TableField<TFileRecord, Long> SIZE = createField("size", org.jooq.impl.SQLDataType.BIGINT, this, "文件大小");

    /**
     * The column <code>ndt.t_file.create_by</code>. 创建人
     */
    public final TableField<TFileRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_file.create_at</code>. 创建时间
     */
    public final TableField<TFileRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * Create a <code>ndt.t_file</code> table reference
     */
    public TFile() {
        this(DSL.name("t_file"), null);
    }

    /**
     * Create an aliased <code>ndt.t_file</code> table reference
     */
    public TFile(String alias) {
        this(DSL.name(alias), T_FILE);
    }

    /**
     * Create an aliased <code>ndt.t_file</code> table reference
     */
    public TFile(Name alias) {
        this(alias, T_FILE);
    }

    private TFile(Name alias, Table<TFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private TFile(Name alias, Table<TFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "文件表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_FILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TFileRecord> getPrimaryKey() {
        return Keys.T_FILE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TFileRecord>> getKeys() {
        return Arrays.<UniqueKey<TFileRecord>>asList(Keys.T_FILE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFile as(String alias) {
        return new TFile(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFile as(Name alias) {
        return new TFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TFile rename(String name) {
        return new TFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TFile rename(Name name) {
        return new TFile(name, null);
    }
}
