/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TOrderInfoRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 订单信息表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderInfo extends TableImpl<TOrderInfoRecord> {

    private static final long serialVersionUID = -1400765195;

    /**
     * The reference instance of <code>ndt.t_order_info</code>
     */
    public static final TOrderInfo T_ORDER_INFO = new TOrderInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderInfoRecord> getRecordType() {
        return TOrderInfoRecord.class;
    }

    /**
     * The column <code>ndt.t_order_info.id</code>. ID
     */
    public final TableField<TOrderInfoRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "ID");

    /**
     * The column <code>ndt.t_order_info.order_code</code>. 订单编号
     */
    public final TableField<TOrderInfoRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.VARCHAR(32), this, "订单编号");

    /**
     * The column <code>ndt.t_order_info.order_date</code>. 订单时间
     */
    public final TableField<TOrderInfoRecord, Timestamp> ORDER_DATE = createField("order_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "订单时间");

    /**
     * The column <code>ndt.t_order_info.name</code>. 收货人姓名
     */
    public final TableField<TOrderInfoRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(6), this, "收货人姓名");

    /**
     * The column <code>ndt.t_order_info.phone</code>. 联系电话
     */
    public final TableField<TOrderInfoRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(13), this, "联系电话");

    /**
     * The column <code>ndt.t_order_info.address</code>. 联系地址
     */
    public final TableField<TOrderInfoRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(100), this, "联系地址");

    /**
     * The column <code>ndt.t_order_info.remark</code>. 备注
     */
    public final TableField<TOrderInfoRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(200), this, "备注");

    /**
     * The column <code>ndt.t_order_info.status</code>. 订单状态(1, 已创建、2, 已发货、3, 已收货、4, 已取消)
     */
    public final TableField<TOrderInfoRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "订单状态(1, 已创建、2, 已发货、3, 已收货、4, 已取消)");

    /**
     * The column <code>ndt.t_order_info.user_id</code>. 下单用户
     */
    public final TableField<TOrderInfoRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "下单用户");

    /**
     * The column <code>ndt.t_order_info.order_send_user</code>. 发货人
     */
    public final TableField<TOrderInfoRecord, BigDecimal> ORDER_SEND_USER = createField("order_send_user", org.jooq.impl.SQLDataType.NUMERIC, this, "发货人");

    /**
     * The column <code>ndt.t_order_info.order_send_date</code>. 发货时间
     */
    public final TableField<TOrderInfoRecord, Timestamp> ORDER_SEND_DATE = createField("order_send_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "发货时间");

    /**
     * The column <code>ndt.t_order_info.order_take_date</code>. 确认收货时间
     */
    public final TableField<TOrderInfoRecord, Timestamp> ORDER_TAKE_DATE = createField("order_take_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "确认收货时间");

    /**
     * The column <code>ndt.t_order_info.update_by</code>. 修改人
     */
    public final TableField<TOrderInfoRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "修改人");

    /**
     * The column <code>ndt.t_order_info.update_at</code>. 修改时间
     */
    public final TableField<TOrderInfoRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>ndt.t_order_info.update_remark</code>. 修改原因
     */
    public final TableField<TOrderInfoRecord, String> UPDATE_REMARK = createField("update_remark", org.jooq.impl.SQLDataType.VARCHAR(120), this, "修改原因");

    /**
     * The column <code>ndt.t_order_info.is_del</code>. 删除状态
     */
    public final TableField<TOrderInfoRecord, Short> IS_DEL = createField("is_del", org.jooq.impl.SQLDataType.SMALLINT, this, "删除状态");

    /**
     * Create a <code>ndt.t_order_info</code> table reference
     */
    public TOrderInfo() {
        this(DSL.name("t_order_info"), null);
    }

    /**
     * Create an aliased <code>ndt.t_order_info</code> table reference
     */
    public TOrderInfo(String alias) {
        this(DSL.name(alias), T_ORDER_INFO);
    }

    /**
     * Create an aliased <code>ndt.t_order_info</code> table reference
     */
    public TOrderInfo(Name alias) {
        this(alias, T_ORDER_INFO);
    }

    private TOrderInfo(Name alias, Table<TOrderInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderInfo(Name alias, Table<TOrderInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "订单信息表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_ORDER_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderInfoRecord> getPrimaryKey() {
        return Keys.PK_T_ORDER_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderInfoRecord>>asList(Keys.PK_T_ORDER_INFO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderInfo as(String alias) {
        return new TOrderInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderInfo as(Name alias) {
        return new TOrderInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderInfo rename(String name) {
        return new TOrderInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderInfo rename(Name name) {
        return new TOrderInfo(name, null);
    }
}
