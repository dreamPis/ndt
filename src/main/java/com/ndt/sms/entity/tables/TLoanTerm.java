/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanTermRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanTerm extends TableImpl<TLoanTermRecord> {

    private static final long serialVersionUID = 1180797161;

    /**
     * The reference instance of <code>ndt.t_loan_term</code>
     */
    public static final TLoanTerm T_LOAN_TERM = new TLoanTerm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanTermRecord> getRecordType() {
        return TLoanTermRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_term.id</code>. 主键
     */
    public final TableField<TLoanTermRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_loan_term.invitation_id</code>. 贷款ID
     */
    public final TableField<TLoanTermRecord, BigDecimal> INVITATION_ID = createField("invitation_id", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款ID");

    /**
     * The column <code>ndt.t_loan_term.discount_collection_id</code>. 贴息采集项目ID
     */
    public final TableField<TLoanTermRecord, BigDecimal> DISCOUNT_COLLECTION_ID = createField("discount_collection_id", org.jooq.impl.SQLDataType.NUMERIC, this, "贴息采集项目ID");

    /**
     * Create a <code>ndt.t_loan_term</code> table reference
     */
    public TLoanTerm() {
        this(DSL.name("t_loan_term"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_term</code> table reference
     */
    public TLoanTerm(String alias) {
        this(DSL.name(alias), T_LOAN_TERM);
    }

    /**
     * Create an aliased <code>ndt.t_loan_term</code> table reference
     */
    public TLoanTerm(Name alias) {
        this(alias, T_LOAN_TERM);
    }

    private TLoanTerm(Name alias, Table<TLoanTermRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanTerm(Name alias, Table<TLoanTermRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_TERM_INVITATION_UN_KEY, Indexes.T_LOAN_TERM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanTermRecord> getPrimaryKey() {
        return Keys.T_LOAN_TERM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanTermRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanTermRecord>>asList(Keys.T_LOAN_TERM_PKEY, Keys.T_LOAN_TERM_INVITATION_UN_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanTerm as(String alias) {
        return new TLoanTerm(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanTerm as(Name alias) {
        return new TLoanTerm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanTerm rename(String name) {
        return new TLoanTerm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanTerm rename(Name name) {
        return new TLoanTerm(name, null);
    }
}
