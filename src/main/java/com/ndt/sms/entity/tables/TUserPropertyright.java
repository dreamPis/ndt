/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TUserPropertyrightRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户产权表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUserPropertyright extends TableImpl<TUserPropertyrightRecord> {

    private static final long serialVersionUID = -2032884402;

    /**
     * The reference instance of <code>ndt.t_user_propertyright</code>
     */
    public static final TUserPropertyright T_USER_PROPERTYRIGHT = new TUserPropertyright();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserPropertyrightRecord> getRecordType() {
        return TUserPropertyrightRecord.class;
    }

    /**
     * The column <code>ndt.t_user_propertyright.id</code>.
     */
    public final TableField<TUserPropertyrightRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_user_propertyright.user_id</code>. 关联用户ID
     */
    public final TableField<TUserPropertyrightRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "关联用户ID");

    /**
     * The column <code>ndt.t_user_propertyright.name</code>. 产权名
     */
    public final TableField<TUserPropertyrightRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30), this, "产权名");

    /**
     * The column <code>ndt.t_user_propertyright.pr_type</code>. 产权类型
     */
    public final TableField<TUserPropertyrightRecord, Integer> PR_TYPE = createField("pr_type", org.jooq.impl.SQLDataType.INTEGER, this, "产权类型");

    /**
     * The column <code>ndt.t_user_propertyright.image_urls</code>. 图片文件
     */
    public final TableField<TUserPropertyrightRecord, String> IMAGE_URLS = createField("image_urls", org.jooq.impl.SQLDataType.VARCHAR(200), this, "图片文件");

    /**
     * The column <code>ndt.t_user_propertyright.remark</code>. 描述方式
     */
    public final TableField<TUserPropertyrightRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "描述方式");

    /**
     * The column <code>ndt.t_user_propertyright.status</code>.
     */
    public final TableField<TUserPropertyrightRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ndt.t_user_propertyright.create_at</code>.
     */
    public final TableField<TUserPropertyrightRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_user_propertyright.create_by</code>.
     */
    public final TableField<TUserPropertyrightRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_user_propertyright.update_at</code>.
     */
    public final TableField<TUserPropertyrightRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_user_propertyright.update_by</code>.
     */
    public final TableField<TUserPropertyrightRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * Create a <code>ndt.t_user_propertyright</code> table reference
     */
    public TUserPropertyright() {
        this(DSL.name("t_user_propertyright"), null);
    }

    /**
     * Create an aliased <code>ndt.t_user_propertyright</code> table reference
     */
    public TUserPropertyright(String alias) {
        this(DSL.name(alias), T_USER_PROPERTYRIGHT);
    }

    /**
     * Create an aliased <code>ndt.t_user_propertyright</code> table reference
     */
    public TUserPropertyright(Name alias) {
        this(alias, T_USER_PROPERTYRIGHT);
    }

    private TUserPropertyright(Name alias, Table<TUserPropertyrightRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUserPropertyright(Name alias, Table<TUserPropertyrightRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户产权表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_USER_PROPERTYRIGHT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserPropertyrightRecord> getPrimaryKey() {
        return Keys.T_USER_PROPERTYRIGHT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserPropertyrightRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserPropertyrightRecord>>asList(Keys.T_USER_PROPERTYRIGHT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUserPropertyright as(String alias) {
        return new TUserPropertyright(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUserPropertyright as(Name alias) {
        return new TUserPropertyright(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUserPropertyright rename(String name) {
        return new TUserPropertyright(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TUserPropertyright rename(Name name) {
        return new TUserPropertyright(name, null);
    }
}
