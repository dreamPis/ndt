/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TSmallLoanOrderRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 小V贷款订单
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TSmallLoanOrder extends TableImpl<TSmallLoanOrderRecord> {

    private static final long serialVersionUID = -1507062126;

    /**
     * The reference instance of <code>ndt.t_small_loan_order</code>
     */
    public static final TSmallLoanOrder T_SMALL_LOAN_ORDER = new TSmallLoanOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TSmallLoanOrderRecord> getRecordType() {
        return TSmallLoanOrderRecord.class;
    }

    /**
     * The column <code>ndt.t_small_loan_order.id</code>. 订单id
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "订单id");

    /**
     * The column <code>ndt.t_small_loan_order.product_id</code>. 金融产品ID
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "金融产品ID");

    /**
     * The column <code>ndt.t_small_loan_order.user_id</code>. 申请用户ID
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "申请用户ID");

    /**
     * The column <code>ndt.t_small_loan_order.company_id</code>. 企业ID
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.NUMERIC, this, "企业ID");

    /**
     * The column <code>ndt.t_small_loan_order.user_mobile</code>. 用户手机号
     */
    public final TableField<TSmallLoanOrderRecord, String> USER_MOBILE = createField("user_mobile", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户手机号");

    /**
     * The column <code>ndt.t_small_loan_order.identity_id</code>. 身份证号
     */
    public final TableField<TSmallLoanOrderRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR(20), this, "身份证号");

    /**
     * The column <code>ndt.t_small_loan_order.address_now</code>. 现住地址
     */
    public final TableField<TSmallLoanOrderRecord, String> ADDRESS_NOW = createField("address_now", org.jooq.impl.SQLDataType.VARCHAR(150), this, "现住地址");

    /**
     * The column <code>ndt.t_small_loan_order.apply_amount</code>. 申请贷款金额
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> APPLY_AMOUNT = createField("apply_amount", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "申请贷款金额");

    /**
     * The column <code>ndt.t_small_loan_order.actual_amount</code>. 实际放款金额
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> ACTUAL_AMOUNT = createField("actual_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "实际放款金额");

    /**
     * The column <code>ndt.t_small_loan_order.credit_period</code>. 贷款期限
     */
    public final TableField<TSmallLoanOrderRecord, Integer> CREDIT_PERIOD = createField("credit_period", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "贷款期限");

    /**
     * The column <code>ndt.t_small_loan_order.accept_time</code>. 受理时间
     */
    public final TableField<TSmallLoanOrderRecord, Timestamp> ACCEPT_TIME = createField("accept_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "受理时间");

    /**
     * The column <code>ndt.t_small_loan_order.create_at</code>. 创建时间
     */
    public final TableField<TSmallLoanOrderRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>ndt.t_small_loan_order.rate</code>. 贷款利率
     */
    public final TableField<TSmallLoanOrderRecord, String> RATE = createField("rate", org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "贷款利率");

    /**
     * The column <code>ndt.t_small_loan_order.status</code>. 贷款所处状态
     */
    public final TableField<TSmallLoanOrderRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "贷款所处状态");

    /**
     * The column <code>ndt.t_small_loan_order.state</code>. 2删除,1可见
     */
    public final TableField<TSmallLoanOrderRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "2删除,1可见");

    /**
     * The column <code>ndt.t_small_loan_order.done_time</code>. 放款时间
     */
    public final TableField<TSmallLoanOrderRecord, Timestamp> DONE_TIME = createField("done_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "放款时间");

    /**
     * The column <code>ndt.t_small_loan_order.term_unit</code>.   贷款期限单位
     */
    public final TableField<TSmallLoanOrderRecord, Integer> TERM_UNIT = createField("term_unit", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "  贷款期限单位");

    /**
     * The column <code>ndt.t_small_loan_order.period</code>. 当前订单状态阶段
     */
    public final TableField<TSmallLoanOrderRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER, this, "当前订单状态阶段");

    /**
     * The column <code>ndt.t_small_loan_order.float_prop</code>. 上浮比例
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> FLOAT_PROP = createField("float_prop", org.jooq.impl.SQLDataType.NUMERIC.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "上浮比例");

    /**
     * The column <code>ndt.t_small_loan_order.cost_amount</code>. 贷款成本
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> COST_AMOUNT = createField("cost_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款成本");

    /**
     * The column <code>ndt.t_small_loan_order.repayment_amount</code>. 还款
     */
    public final TableField<TSmallLoanOrderRecord, BigDecimal> REPAYMENT_AMOUNT = createField("repayment_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "还款");

    /**
     * The column <code>ndt.t_small_loan_order.repayment_method</code>. 还款方式
     */
    public final TableField<TSmallLoanOrderRecord, Integer> REPAYMENT_METHOD = createField("repayment_method", org.jooq.impl.SQLDataType.INTEGER, this, "还款方式");

    /**
     * The column <code>ndt.t_small_loan_order.apply_purpose</code>. 贷款用途
     */
    public final TableField<TSmallLoanOrderRecord, Integer> APPLY_PURPOSE = createField("apply_purpose", org.jooq.impl.SQLDataType.INTEGER, this, "贷款用途");

    /**
     * Create a <code>ndt.t_small_loan_order</code> table reference
     */
    public TSmallLoanOrder() {
        this(DSL.name("t_small_loan_order"), null);
    }

    /**
     * Create an aliased <code>ndt.t_small_loan_order</code> table reference
     */
    public TSmallLoanOrder(String alias) {
        this(DSL.name(alias), T_SMALL_LOAN_ORDER);
    }

    /**
     * Create an aliased <code>ndt.t_small_loan_order</code> table reference
     */
    public TSmallLoanOrder(Name alias) {
        this(alias, T_SMALL_LOAN_ORDER);
    }

    private TSmallLoanOrder(Name alias, Table<TSmallLoanOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private TSmallLoanOrder(Name alias, Table<TSmallLoanOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "小V贷款订单");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_SMALL_LOAN_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TSmallLoanOrderRecord> getPrimaryKey() {
        return Keys.T_SMALL_LOAN_ORDER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TSmallLoanOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<TSmallLoanOrderRecord>>asList(Keys.T_SMALL_LOAN_ORDER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSmallLoanOrder as(String alias) {
        return new TSmallLoanOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TSmallLoanOrder as(Name alias) {
        return new TSmallLoanOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TSmallLoanOrder rename(String name) {
        return new TSmallLoanOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TSmallLoanOrder rename(Name name) {
        return new TSmallLoanOrder(name, null);
    }
}
