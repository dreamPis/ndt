/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TInfoRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 资讯表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TInfo extends TableImpl<TInfoRecord> {

    private static final long serialVersionUID = 1708924804;

    /**
     * The reference instance of <code>ndt.t_info</code>
     */
    public static final TInfo T_INFO = new TInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TInfoRecord> getRecordType() {
        return TInfoRecord.class;
    }

    /**
     * The column <code>ndt.t_info.id</code>.
     */
    public final TableField<TInfoRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_info.type</code>. 资讯类型
     */
    public final TableField<TInfoRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "资讯类型");

    /**
     * The column <code>ndt.t_info.title</code>. 标题
     */
    public final TableField<TInfoRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(400), this, "标题");

    /**
     * The column <code>ndt.t_info.summary</code>. 摘要
     */
    public final TableField<TInfoRecord, String> SUMMARY = createField("summary", org.jooq.impl.SQLDataType.VARCHAR(500), this, "摘要");

    /**
     * The column <code>ndt.t_info.content</code>. 内容
     */
    public final TableField<TInfoRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "内容");

    /**
     * The column <code>ndt.t_info.source</code>. 信息来源
     */
    public final TableField<TInfoRecord, String> SOURCE = createField("source", org.jooq.impl.SQLDataType.VARCHAR(30), this, "信息来源");

    /**
     * The column <code>ndt.t_info.publish_org_id</code>. 发布机构ID
     */
    public final TableField<TInfoRecord, BigDecimal> PUBLISH_ORG_ID = createField("publish_org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "发布机构ID");

    /**
     * The column <code>ndt.t_info.link_image_url</code>. 链接图片
     */
    public final TableField<TInfoRecord, String> LINK_IMAGE_URL = createField("link_image_url", org.jooq.impl.SQLDataType.VARCHAR(80), this, "链接图片");

    /**
     * The column <code>ndt.t_info.importance</code>. 重要级别
     */
    public final TableField<TInfoRecord, Integer> IMPORTANCE = createField("importance", org.jooq.impl.SQLDataType.INTEGER, this, "重要级别");

    /**
     * The column <code>ndt.t_info.read_count</code>. 阅读次数
     */
    public final TableField<TInfoRecord, BigDecimal> READ_COUNT = createField("read_count", org.jooq.impl.SQLDataType.NUMERIC, this, "阅读次数");

    /**
     * The column <code>ndt.t_info.labels</code>. 资讯标签
     */
    public final TableField<TInfoRecord, Integer[]> LABELS = createField("labels", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "资讯标签");

    /**
     * The column <code>ndt.t_info.divisions</code>. 可见区域
     */
    public final TableField<TInfoRecord, BigDecimal[]> DIVISIONS = createField("divisions", org.jooq.impl.SQLDataType.NUMERIC.getArrayDataType(), this, "可见区域");

    /**
     * The column <code>ndt.t_info.state</code>. 审核状态
     */
    public final TableField<TInfoRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER, this, "审核状态");

    /**
     * The column <code>ndt.t_info.status</code>. 记录状态
     */
    public final TableField<TInfoRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "记录状态");

    /**
     * The column <code>ndt.t_info.create_by</code>. 创建人
     */
    public final TableField<TInfoRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_info.create_at</code>. 创建时间
     */
    public final TableField<TInfoRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_info.update_by</code>. 更新人
     */
    public final TableField<TInfoRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "更新人");

    /**
     * The column <code>ndt.t_info.update_at</code>. 更新时间
     */
    public final TableField<TInfoRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>ndt.t_info.enclosure</code>.
     */
    public final TableField<TInfoRecord, BigDecimal[]> ENCLOSURE = createField("enclosure", org.jooq.impl.SQLDataType.NUMERIC.getArrayDataType(), this, "");

    /**
     * The column <code>ndt.t_info.last_img_uri</code>. 村务信息-特别添加图片
     */
    public final TableField<TInfoRecord, String[]> LAST_IMG_URI = createField("last_img_uri", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "村务信息-特别添加图片");

    /**
     * Create a <code>ndt.t_info</code> table reference
     */
    public TInfo() {
        this(DSL.name("t_info"), null);
    }

    /**
     * Create an aliased <code>ndt.t_info</code> table reference
     */
    public TInfo(String alias) {
        this(DSL.name(alias), T_INFO);
    }

    /**
     * Create an aliased <code>ndt.t_info</code> table reference
     */
    public TInfo(Name alias) {
        this(alias, T_INFO);
    }

    private TInfo(Name alias, Table<TInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TInfo(Name alias, Table<TInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "资讯表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TInfoRecord> getPrimaryKey() {
        return Keys.T_INFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TInfoRecord>>asList(Keys.T_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TInfo as(String alias) {
        return new TInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TInfo as(Name alias) {
        return new TInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TInfo rename(String name) {
        return new TInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TInfo rename(Name name) {
        return new TInfo(name, null);
    }
}
