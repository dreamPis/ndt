/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables.records;


import com.ndt.sms.entity.tables.CDictMapping;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 码表映射
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CDictMappingRecord extends UpdatableRecordImpl<CDictMappingRecord> implements Record7<Integer, Integer, Short, String, Short, Timestamp, BigDecimal> {

    private static final long serialVersionUID = -134447154;

    /**
     * Setter for <code>ndt.c_dict_mapping.id</code>.
     */
    public CDictMappingRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>ndt.c_dict_mapping.type_id</code>. 码表类型ID
     */
    public CDictMappingRecord setTypeId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.type_id</code>. 码表类型ID
     */
    public Integer getTypeId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>ndt.c_dict_mapping.key</code>. 码表KEY
     */
    public CDictMappingRecord setKey(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.key</code>. 码表KEY
     */
    public Short getKey() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>ndt.c_dict_mapping.value</code>. 码表VALUE
     */
    public CDictMappingRecord setValue(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.value</code>. 码表VALUE
     */
    public String getValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ndt.c_dict_mapping.status</code>. 记录状态
     */
    public CDictMappingRecord setStatus(Short value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.status</code>. 记录状态
     */
    public Short getStatus() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>ndt.c_dict_mapping.update_at</code>. 更新时间
     */
    public CDictMappingRecord setUpdateAt(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.update_at</code>. 更新时间
     */
    public Timestamp getUpdateAt() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>ndt.c_dict_mapping.update_by</code>. 更新人
     */
    public CDictMappingRecord setUpdateBy(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_dict_mapping.update_by</code>. 更新人
     */
    public BigDecimal getUpdateBy() {
        return (BigDecimal) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Short, String, Short, Timestamp, BigDecimal> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Short, String, Short, Timestamp, BigDecimal> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return CDictMapping.C_DICT_MAPPING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return CDictMapping.C_DICT_MAPPING.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field3() {
        return CDictMapping.C_DICT_MAPPING.KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CDictMapping.C_DICT_MAPPING.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field5() {
        return CDictMapping.C_DICT_MAPPING.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return CDictMapping.C_DICT_MAPPING.UPDATE_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return CDictMapping.C_DICT_MAPPING.UPDATE_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component3() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value3() {
        return getKey();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getUpdateBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value2(Integer value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value3(Short value) {
        setKey(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value4(String value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value5(Short value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value6(Timestamp value) {
        setUpdateAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord value7(BigDecimal value) {
        setUpdateBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CDictMappingRecord values(Integer value1, Integer value2, Short value3, String value4, Short value5, Timestamp value6, BigDecimal value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CDictMappingRecord
     */
    public CDictMappingRecord() {
        super(CDictMapping.C_DICT_MAPPING);
    }

    /**
     * Create a detached, initialised CDictMappingRecord
     */
    public CDictMappingRecord(Integer id, Integer typeId, Short key, String value, Short status, Timestamp updateAt, BigDecimal updateBy) {
        super(CDictMapping.C_DICT_MAPPING);

        set(0, id);
        set(1, typeId);
        set(2, key);
        set(3, value);
        set(4, status);
        set(5, updateAt);
        set(6, updateBy);
    }
}
