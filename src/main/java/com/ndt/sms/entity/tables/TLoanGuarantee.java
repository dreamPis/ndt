/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanGuaranteeRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 贷款担保中间表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanGuarantee extends TableImpl<TLoanGuaranteeRecord> {

    private static final long serialVersionUID = 418666012;

    /**
     * The reference instance of <code>ndt.t_loan_guarantee</code>
     */
    public static final TLoanGuarantee T_LOAN_GUARANTEE = new TLoanGuarantee();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanGuaranteeRecord> getRecordType() {
        return TLoanGuaranteeRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_guarantee.id</code>.
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_loan_guarantee.invitation_id</code>. 邀约id
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> INVITATION_ID = createField("invitation_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "邀约id");

    /**
     * The column <code>ndt.t_loan_guarantee.loan_done_id</code>. 放款记录id
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> LOAN_DONE_ID = createField("loan_done_id", org.jooq.impl.SQLDataType.NUMERIC, this, "放款记录id");

    /**
     * The column <code>ndt.t_loan_guarantee.guarantee_type</code>. 担保类型,1个人,2企业
     */
    public final TableField<TLoanGuaranteeRecord, Integer> GUARANTEE_TYPE = createField("guarantee_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "担保类型,1个人,2企业");

    /**
     * The column <code>ndt.t_loan_guarantee.guarantee_id</code>. 担保的人id或公司id
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> GUARANTEE_ID = createField("guarantee_id", org.jooq.impl.SQLDataType.NUMERIC, this, "担保的人id或公司id");

    /**
     * The column <code>ndt.t_loan_guarantee.guarantee_name</code>. 担保名称
     */
    public final TableField<TLoanGuaranteeRecord, String> GUARANTEE_NAME = createField("guarantee_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "担保名称");

    /**
     * The column <code>ndt.t_loan_guarantee.create_time</code>. 创建时间
     */
    public final TableField<TLoanGuaranteeRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>ndt.t_loan_guarantee.ok_time</code>. 确认时间
     */
    public final TableField<TLoanGuaranteeRecord, Timestamp> OK_TIME = createField("ok_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "确认时间");

    /**
     * The column <code>ndt.t_loan_guarantee.create_user_id</code>. 添加人
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> CREATE_USER_ID = createField("create_user_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "添加人");

    /**
     * The column <code>ndt.t_loan_guarantee.ok_user_id</code>. 确认人
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> OK_USER_ID = createField("ok_user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "确认人");

    /**
     * The column <code>ndt.t_loan_guarantee.money</code>. 确认金额
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> MONEY = createField("money", org.jooq.impl.SQLDataType.NUMERIC, this, "确认金额");

    /**
     * The column <code>ndt.t_loan_guarantee.money_unit</code>. 金额单位
     */
    public final TableField<TLoanGuaranteeRecord, Integer> MONEY_UNIT = createField("money_unit", org.jooq.impl.SQLDataType.INTEGER, this, "金额单位");

    /**
     * The column <code>ndt.t_loan_guarantee.status</code>. 当前状态,拒绝,确认,待确认
     */
    public final TableField<TLoanGuaranteeRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "当前状态,拒绝,确认,待确认");

    /**
     * The column <code>ndt.t_loan_guarantee.code</code>. 社会信用编码
     */
    public final TableField<TLoanGuaranteeRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "社会信用编码");

    /**
     * The column <code>ndt.t_loan_guarantee.done_amount</code>. 担保对应的放款金额
     */
    public final TableField<TLoanGuaranteeRecord, BigDecimal> DONE_AMOUNT = createField("done_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "担保对应的放款金额");

    /**
     * Create a <code>ndt.t_loan_guarantee</code> table reference
     */
    public TLoanGuarantee() {
        this(DSL.name("t_loan_guarantee"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_guarantee</code> table reference
     */
    public TLoanGuarantee(String alias) {
        this(DSL.name(alias), T_LOAN_GUARANTEE);
    }

    /**
     * Create an aliased <code>ndt.t_loan_guarantee</code> table reference
     */
    public TLoanGuarantee(Name alias) {
        this(alias, T_LOAN_GUARANTEE);
    }

    private TLoanGuarantee(Name alias, Table<TLoanGuaranteeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanGuarantee(Name alias, Table<TLoanGuaranteeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "贷款担保中间表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_GUARANTEE_INDEX1, Indexes.T_LOAN_GUARANTEE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanGuaranteeRecord> getPrimaryKey() {
        return Keys.T_LOAN_GUARANTEE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanGuaranteeRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanGuaranteeRecord>>asList(Keys.T_LOAN_GUARANTEE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanGuarantee as(String alias) {
        return new TLoanGuarantee(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanGuarantee as(Name alias) {
        return new TLoanGuarantee(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanGuarantee rename(String name) {
        return new TLoanGuarantee(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanGuarantee rename(Name name) {
        return new TLoanGuarantee(name, null);
    }
}
