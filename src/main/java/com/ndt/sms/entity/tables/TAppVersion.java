/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TAppVersionRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * APP版本管理
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAppVersion extends TableImpl<TAppVersionRecord> {

    private static final long serialVersionUID = -1132500133;

    /**
     * The reference instance of <code>ndt.t_app_version</code>
     */
    public static final TAppVersion T_APP_VERSION = new TAppVersion();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TAppVersionRecord> getRecordType() {
        return TAppVersionRecord.class;
    }

    /**
     * The column <code>ndt.t_app_version.id</code>.
     */
    public final TableField<TAppVersionRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_app_version.app_id</code>. 产品APP_ID
     */
    public final TableField<TAppVersionRecord, String> APP_ID = createField("app_id", org.jooq.impl.SQLDataType.VARCHAR(20), this, "产品APP_ID");

    /**
     * The column <code>ndt.t_app_version.app_name</code>. 产品APP_名称
     */
    public final TableField<TAppVersionRecord, String> APP_NAME = createField("app_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "产品APP_名称");

    /**
     * The column <code>ndt.t_app_version.version_code</code>. 版本号
     */
    public final TableField<TAppVersionRecord, String> VERSION_CODE = createField("version_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "版本号");

    /**
     * The column <code>ndt.t_app_version.version_name</code>. 版本name
     */
    public final TableField<TAppVersionRecord, String> VERSION_NAME = createField("version_name", org.jooq.impl.SQLDataType.VARCHAR(40), this, "版本name");

    /**
     * The column <code>ndt.t_app_version.user_agent</code>. 各渠道版本 ，可升级多渠道
     */
    public final TableField<TAppVersionRecord, String[]> USER_AGENT = createField("user_agent", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "各渠道版本 ，可升级多渠道");

    /**
     * The column <code>ndt.t_app_version.download_url</code>. 下载url
     */
    public final TableField<TAppVersionRecord, String> DOWNLOAD_URL = createField("download_url", org.jooq.impl.SQLDataType.VARCHAR(150), this, "下载url");

    /**
     * The column <code>ndt.t_app_version.update_id</code>. 记录本次版本应该升级到最新版本号
     */
    public final TableField<TAppVersionRecord, BigDecimal> UPDATE_ID = createField("update_id", org.jooq.impl.SQLDataType.NUMERIC, this, "记录本次版本应该升级到最新版本号");

    /**
     * The column <code>ndt.t_app_version.update_log</code>. 升级日志
     */
    public final TableField<TAppVersionRecord, String> UPDATE_LOG = createField("update_log", org.jooq.impl.SQLDataType.CLOB, this, "升级日志");

    /**
     * The column <code>ndt.t_app_version.update_time</code>. 升级时间
     */
    public final TableField<TAppVersionRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "升级时间");

    /**
     * The column <code>ndt.t_app_version.update_install</code>. 是否强制安装
     */
    public final TableField<TAppVersionRecord, Boolean> UPDATE_INSTALL = createField("update_install", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否强制安装");

    /**
     * Create a <code>ndt.t_app_version</code> table reference
     */
    public TAppVersion() {
        this(DSL.name("t_app_version"), null);
    }

    /**
     * Create an aliased <code>ndt.t_app_version</code> table reference
     */
    public TAppVersion(String alias) {
        this(DSL.name(alias), T_APP_VERSION);
    }

    /**
     * Create an aliased <code>ndt.t_app_version</code> table reference
     */
    public TAppVersion(Name alias) {
        this(alias, T_APP_VERSION);
    }

    private TAppVersion(Name alias, Table<TAppVersionRecord> aliased) {
        this(alias, aliased, null);
    }

    private TAppVersion(Name alias, Table<TAppVersionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "APP版本管理");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_APP_VERSION_PKEY, Indexes.T_VERSION_CODE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TAppVersionRecord> getPrimaryKey() {
        return Keys.T_APP_VERSION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TAppVersionRecord>> getKeys() {
        return Arrays.<UniqueKey<TAppVersionRecord>>asList(Keys.T_APP_VERSION_PKEY, Keys.T_VERSION_CODE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAppVersion as(String alias) {
        return new TAppVersion(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAppVersion as(Name alias) {
        return new TAppVersion(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TAppVersion rename(String name) {
        return new TAppVersion(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TAppVersion rename(Name name) {
        return new TAppVersion(name, null);
    }
}
