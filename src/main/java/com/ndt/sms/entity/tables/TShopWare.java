/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TShopWareRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品系统表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TShopWare extends TableImpl<TShopWareRecord> {

    private static final long serialVersionUID = -634080277;

    /**
     * The reference instance of <code>ndt.t_shop_ware</code>
     */
    public static final TShopWare T_SHOP_WARE = new TShopWare();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TShopWareRecord> getRecordType() {
        return TShopWareRecord.class;
    }

    /**
     * The column <code>ndt.t_shop_ware.id</code>. 商品ID
     */
    public final TableField<TShopWareRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "商品ID");

    /**
     * The column <code>ndt.t_shop_ware.ware_name</code>. 商品名称
     */
    public final TableField<TShopWareRecord, String> WARE_NAME = createField("ware_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "商品名称");

    /**
     * The column <code>ndt.t_shop_ware.ware_price</code>. 商品价格
     */
    public final TableField<TShopWareRecord, Integer> WARE_PRICE = createField("ware_price", org.jooq.impl.SQLDataType.INTEGER, this, "商品价格");

    /**
     * The column <code>ndt.t_shop_ware.ware_stock</code>. 库存量
     */
    public final TableField<TShopWareRecord, Integer> WARE_STOCK = createField("ware_stock", org.jooq.impl.SQLDataType.INTEGER, this, "库存量");

    /**
     * The column <code>ndt.t_shop_ware.ware_sold</code>. 已售量
     */
    public final TableField<TShopWareRecord, Integer> WARE_SOLD = createField("ware_sold", org.jooq.impl.SQLDataType.INTEGER, this, "已售量");

    /**
     * The column <code>ndt.t_shop_ware.is_discount</code>. 是否打折(1, 是、2, 否)
     */
    public final TableField<TShopWareRecord, Short> IS_DISCOUNT = createField("is_discount", org.jooq.impl.SQLDataType.SMALLINT, this, "是否打折(1, 是、2, 否)");

    /**
     * The column <code>ndt.t_shop_ware.discount_lvl</code>. 折扣级别
     */
    public final TableField<TShopWareRecord, Integer> DISCOUNT_LVL = createField("discount_lvl", org.jooq.impl.SQLDataType.INTEGER, this, "折扣级别");

    /**
     * The column <code>ndt.t_shop_ware.is_promotion</code>. 是否促销(1, 是、2, 否)
     */
    public final TableField<TShopWareRecord, Short> IS_PROMOTION = createField("is_promotion", org.jooq.impl.SQLDataType.SMALLINT, this, "是否促销(1, 是、2, 否)");

    /**
     * The column <code>ndt.t_shop_ware.promotion_num</code>. 促销量
     */
    public final TableField<TShopWareRecord, Integer> PROMOTION_NUM = createField("promotion_num", org.jooq.impl.SQLDataType.INTEGER, this, "促销量");

    /**
     * The column <code>ndt.t_shop_ware.ware_des</code>. 商品描述
     */
    public final TableField<TShopWareRecord, String> WARE_DES = createField("ware_des", org.jooq.impl.SQLDataType.VARCHAR(140), this, "商品描述");

    /**
     * The column <code>ndt.t_shop_ware.ware_info</code>. 商品详情
     */
    public final TableField<TShopWareRecord, String> WARE_INFO = createField("ware_info", org.jooq.impl.SQLDataType.CLOB, this, "商品详情");

    /**
     * The column <code>ndt.t_shop_ware.status</code>. 商品状态(1, 上架、2, 下架)
     */
    public final TableField<TShopWareRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "商品状态(1, 上架、2, 下架)");

    /**
     * The column <code>ndt.t_shop_ware.is_del</code>. 是否删除
     */
    public final TableField<TShopWareRecord, Short> IS_DEL = createField("is_del", org.jooq.impl.SQLDataType.SMALLINT, this, "是否删除");

    /**
     * The column <code>ndt.t_shop_ware.create_by</code>. 创建人
     */
    public final TableField<TShopWareRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_shop_ware.create_at</code>. 创建时间
     */
    public final TableField<TShopWareRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_shop_ware.update_by</code>. 修改人
     */
    public final TableField<TShopWareRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "修改人");

    /**
     * The column <code>ndt.t_shop_ware.update_at</code>. 修改时间
     */
    public final TableField<TShopWareRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>ndt.t_shop_ware.ware_score</code>. 兑换积分
     */
    public final TableField<TShopWareRecord, Integer> WARE_SCORE = createField("ware_score", org.jooq.impl.SQLDataType.INTEGER, this, "兑换积分");

    /**
     * The column <code>ndt.t_shop_ware.cover_img_Id</code>. 封面图片id
     */
    public final TableField<TShopWareRecord, BigDecimal> COVER_IMG_ID = createField("cover_img_Id", org.jooq.impl.SQLDataType.NUMERIC, this, "封面图片id");

    /**
     * The column <code>ndt.t_shop_ware.info_img_ids</code>. 内容图片[图片id:文字介绍]
     */
    public final TableField<TShopWareRecord, String[]> INFO_IMG_IDS = createField("info_img_ids", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "内容图片[图片id:文字介绍]");

    /**
     * Create a <code>ndt.t_shop_ware</code> table reference
     */
    public TShopWare() {
        this(DSL.name("t_shop_ware"), null);
    }

    /**
     * Create an aliased <code>ndt.t_shop_ware</code> table reference
     */
    public TShopWare(String alias) {
        this(DSL.name(alias), T_SHOP_WARE);
    }

    /**
     * Create an aliased <code>ndt.t_shop_ware</code> table reference
     */
    public TShopWare(Name alias) {
        this(alias, T_SHOP_WARE);
    }

    private TShopWare(Name alias, Table<TShopWareRecord> aliased) {
        this(alias, aliased, null);
    }

    private TShopWare(Name alias, Table<TShopWareRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "商品系统表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_SHOP_WARE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TShopWareRecord> getPrimaryKey() {
        return Keys.PK_T_SHOP_WARE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TShopWareRecord>> getKeys() {
        return Arrays.<UniqueKey<TShopWareRecord>>asList(Keys.PK_T_SHOP_WARE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TShopWare as(String alias) {
        return new TShopWare(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TShopWare as(Name alias) {
        return new TShopWare(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TShopWare rename(String name) {
        return new TShopWare(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TShopWare rename(Name name) {
        return new TShopWare(name, null);
    }
}
