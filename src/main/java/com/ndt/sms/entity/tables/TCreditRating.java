/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TCreditRatingRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 信用评定汇总表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCreditRating extends TableImpl<TCreditRatingRecord> {

    private static final long serialVersionUID = 1198641489;

    /**
     * The reference instance of <code>ndt.t_credit_rating</code>
     */
    public static final TCreditRating T_CREDIT_RATING = new TCreditRating();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCreditRatingRecord> getRecordType() {
        return TCreditRatingRecord.class;
    }

    /**
     * The column <code>ndt.t_credit_rating.id</code>. 表ID
     */
    public final TableField<TCreditRatingRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "表ID");

    /**
     * The column <code>ndt.t_credit_rating.name</code>. 名称
     */
    public final TableField<TCreditRatingRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "名称");

    /**
     * The column <code>ndt.t_credit_rating.code</code>. 社会信用代码
     */
    public final TableField<TCreditRatingRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "社会信用代码");

    /**
     * The column <code>ndt.t_credit_rating.address</code>. 详细地址
     */
    public final TableField<TCreditRatingRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(60), this, "详细地址");

    /**
     * The column <code>ndt.t_credit_rating.brief_addr</code>. 简略地址
     */
    public final TableField<TCreditRatingRecord, String> BRIEF_ADDR = createField("brief_addr", org.jooq.impl.SQLDataType.VARCHAR(40), this, "简略地址");

    /**
     * The column <code>ndt.t_credit_rating.type</code>. 是个人还是企业(1, 个人、2,企业)
     */
    public final TableField<TCreditRatingRecord, Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT, this, "是个人还是企业(1, 个人、2,企业)");

    /**
     * The column <code>ndt.t_credit_rating.division_id</code>. 所属区域ID
     */
    public final TableField<TCreditRatingRecord, BigDecimal> DIVISION_ID = createField("division_id", org.jooq.impl.SQLDataType.NUMERIC, this, "所属区域ID");

    /**
     * The column <code>ndt.t_credit_rating.state</code>. 1、未审核，2、审核通过，3、审核不通过
     */
    public final TableField<TCreditRatingRecord, Short> STATE = createField("state", org.jooq.impl.SQLDataType.SMALLINT, this, "1、未审核，2、审核通过，3、审核不通过");

    /**
     * Create a <code>ndt.t_credit_rating</code> table reference
     */
    public TCreditRating() {
        this(DSL.name("t_credit_rating"), null);
    }

    /**
     * Create an aliased <code>ndt.t_credit_rating</code> table reference
     */
    public TCreditRating(String alias) {
        this(DSL.name(alias), T_CREDIT_RATING);
    }

    /**
     * Create an aliased <code>ndt.t_credit_rating</code> table reference
     */
    public TCreditRating(Name alias) {
        this(alias, T_CREDIT_RATING);
    }

    private TCreditRating(Name alias, Table<TCreditRatingRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCreditRating(Name alias, Table<TCreditRatingRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "信用评定汇总表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_CREDIT_RATING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCreditRatingRecord> getPrimaryKey() {
        return Keys.PK_T_CREDIT_RATING;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCreditRatingRecord>> getKeys() {
        return Arrays.<UniqueKey<TCreditRatingRecord>>asList(Keys.PK_T_CREDIT_RATING);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCreditRating as(String alias) {
        return new TCreditRating(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCreditRating as(Name alias) {
        return new TCreditRating(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCreditRating rename(String name) {
        return new TCreditRating(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCreditRating rename(Name name) {
        return new TCreditRating(name, null);
    }
}
