/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TRoleRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRole extends TableImpl<TRoleRecord> {

    private static final long serialVersionUID = -529707962;

    /**
     * The reference instance of <code>ndt.t_role</code>
     */
    public static final TRole T_ROLE = new TRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRoleRecord> getRecordType() {
        return TRoleRecord.class;
    }

    /**
     * The column <code>ndt.t_role.id</code>.
     */
    public final TableField<TRoleRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_role.name</code>. 角色名称
     */
    public final TableField<TRoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "角色名称");

    /**
     * The column <code>ndt.t_role.description</code>. 描述
     */
    public final TableField<TRoleRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(100), this, "描述");

    /**
     * The column <code>ndt.t_role.is_admin</code>. 是否是管理员
     */
    public final TableField<TRoleRecord, Boolean> IS_ADMIN = createField("is_admin", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否是管理员");

    /**
     * The column <code>ndt.t_role.create_at</code>. 创建时间
     */
    public final TableField<TRoleRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_role.create_by</code>. 创建人
     */
    public final TableField<TRoleRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * Create a <code>ndt.t_role</code> table reference
     */
    public TRole() {
        this(DSL.name("t_role"), null);
    }

    /**
     * Create an aliased <code>ndt.t_role</code> table reference
     */
    public TRole(String alias) {
        this(DSL.name(alias), T_ROLE);
    }

    /**
     * Create an aliased <code>ndt.t_role</code> table reference
     */
    public TRole(Name alias) {
        this(alias, T_ROLE);
    }

    private TRole(Name alias, Table<TRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRole(Name alias, Table<TRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "角色表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRoleRecord> getPrimaryKey() {
        return Keys.T_ROLE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<TRoleRecord>>asList(Keys.T_ROLE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRole as(String alias) {
        return new TRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRole as(Name alias) {
        return new TRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRole rename(String name) {
        return new TRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRole rename(Name name) {
        return new TRole(name, null);
    }
}
