/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanProductCostInfoRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanProductCostInfo extends TableImpl<TLoanProductCostInfoRecord> {

    private static final long serialVersionUID = 2088005277;

    /**
     * The reference instance of <code>ndt.t_loan_product_cost_info</code>
     */
    public static final TLoanProductCostInfo T_LOAN_PRODUCT_COST_INFO = new TLoanProductCostInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanProductCostInfoRecord> getRecordType() {
        return TLoanProductCostInfoRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_product_cost_info.id</code>. 主键
     */
    public final TableField<TLoanProductCostInfoRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_loan_product_cost_info.product_id</code>. 产品ID
     */
    public final TableField<TLoanProductCostInfoRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "产品ID");

    /**
     * The column <code>ndt.t_loan_product_cost_info.loan_cycle</code>. 贷款周期，以月为单位
     */
    public final TableField<TLoanProductCostInfoRecord, Integer> LOAN_CYCLE = createField("loan_cycle", org.jooq.impl.SQLDataType.INTEGER, this, "贷款周期，以月为单位");

    /**
     * The column <code>ndt.t_loan_product_cost_info.amount</code>. 金额(万元)
     */
    public final TableField<TLoanProductCostInfoRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC, this, "金额(万元)");

    /**
     * The column <code>ndt.t_loan_product_cost_info.m_repayment</code>. 月还款
     */
    public final TableField<TLoanProductCostInfoRecord, BigDecimal> M_REPAYMENT = createField("m_repayment", org.jooq.impl.SQLDataType.NUMERIC, this, "月还款");

    /**
     * The column <code>ndt.t_loan_product_cost_info.total_interest</code>. 总利息
     */
    public final TableField<TLoanProductCostInfoRecord, BigDecimal> TOTAL_INTEREST = createField("total_interest", org.jooq.impl.SQLDataType.NUMERIC, this, "总利息");

    /**
     * The column <code>ndt.t_loan_product_cost_info.count_type</code>. 成本计算方式，参考码表81
     */
    public final TableField<TLoanProductCostInfoRecord, Integer> COUNT_TYPE = createField("count_type", org.jooq.impl.SQLDataType.INTEGER, this, "成本计算方式，参考码表81");

    /**
     * Create a <code>ndt.t_loan_product_cost_info</code> table reference
     */
    public TLoanProductCostInfo() {
        this(DSL.name("t_loan_product_cost_info"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_product_cost_info</code> table reference
     */
    public TLoanProductCostInfo(String alias) {
        this(DSL.name(alias), T_LOAN_PRODUCT_COST_INFO);
    }

    /**
     * Create an aliased <code>ndt.t_loan_product_cost_info</code> table reference
     */
    public TLoanProductCostInfo(Name alias) {
        this(alias, T_LOAN_PRODUCT_COST_INFO);
    }

    private TLoanProductCostInfo(Name alias, Table<TLoanProductCostInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanProductCostInfo(Name alias, Table<TLoanProductCostInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_PRODUCT_COST_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanProductCostInfoRecord> getPrimaryKey() {
        return Keys.T_LOAN_PRODUCT_COST_INFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanProductCostInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanProductCostInfoRecord>>asList(Keys.T_LOAN_PRODUCT_COST_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanProductCostInfo as(String alias) {
        return new TLoanProductCostInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanProductCostInfo as(Name alias) {
        return new TLoanProductCostInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanProductCostInfo rename(String name) {
        return new TLoanProductCostInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanProductCostInfo rename(Name name) {
        return new TLoanProductCostInfo(name, null);
    }
}
