/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TCreditTaskRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 信用任务设置
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCreditTask extends TableImpl<TCreditTaskRecord> {

    private static final long serialVersionUID = -451167706;

    /**
     * The reference instance of <code>ndt.t_credit_task</code>
     */
    public static final TCreditTask T_CREDIT_TASK = new TCreditTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCreditTaskRecord> getRecordType() {
        return TCreditTaskRecord.class;
    }

    /**
     * The column <code>ndt.t_credit_task.id</code>.
     */
    public final TableField<TCreditTaskRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_credit_task.user_type</code>. 用户类型
     */
    public final TableField<TCreditTaskRecord, Integer> USER_TYPE = createField("user_type", org.jooq.impl.SQLDataType.INTEGER, this, "用户类型");

    /**
     * The column <code>ndt.t_credit_task.index</code>. 任务顺序
     */
    public final TableField<TCreditTaskRecord, Short> INDEX = createField("index", org.jooq.impl.SQLDataType.SMALLINT, this, "任务顺序");

    /**
     * The column <code>ndt.t_credit_task.name</code>. 任务名
     */
    public final TableField<TCreditTaskRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30), this, "任务名");

    /**
     * The column <code>ndt.t_credit_task.score</code>. 任务分数
     */
    public final TableField<TCreditTaskRecord, Integer> SCORE = createField("score", org.jooq.impl.SQLDataType.INTEGER, this, "任务分数");

    /**
     * The column <code>ndt.t_credit_task.to_link</code>. 任务内容
     */
    public final TableField<TCreditTaskRecord, String> TO_LINK = createField("to_link", org.jooq.impl.SQLDataType.VARCHAR(50), this, "任务内容");

    /**
     * Create a <code>ndt.t_credit_task</code> table reference
     */
    public TCreditTask() {
        this(DSL.name("t_credit_task"), null);
    }

    /**
     * Create an aliased <code>ndt.t_credit_task</code> table reference
     */
    public TCreditTask(String alias) {
        this(DSL.name(alias), T_CREDIT_TASK);
    }

    /**
     * Create an aliased <code>ndt.t_credit_task</code> table reference
     */
    public TCreditTask(Name alias) {
        this(alias, T_CREDIT_TASK);
    }

    private TCreditTask(Name alias, Table<TCreditTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCreditTask(Name alias, Table<TCreditTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "信用任务设置");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CREDIT_TASK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCreditTaskRecord> getPrimaryKey() {
        return Keys.T_CREDIT_TASK_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCreditTaskRecord>> getKeys() {
        return Arrays.<UniqueKey<TCreditTaskRecord>>asList(Keys.T_CREDIT_TASK_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCreditTask as(String alias) {
        return new TCreditTask(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCreditTask as(Name alias) {
        return new TCreditTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCreditTask rename(String name) {
        return new TCreditTask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCreditTask rename(Name name) {
        return new TCreditTask(name, null);
    }
}
