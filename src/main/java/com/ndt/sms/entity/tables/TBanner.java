/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TBannerRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * t_banner
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBanner extends TableImpl<TBannerRecord> {

    private static final long serialVersionUID = -44864643;

    /**
     * The reference instance of <code>ndt.t_banner</code>
     */
    public static final TBanner T_BANNER = new TBanner();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TBannerRecord> getRecordType() {
        return TBannerRecord.class;
    }

    /**
     * The column <code>ndt.t_banner.division_code</code>. 区域编码
     */
    public final TableField<TBannerRecord, String> DIVISION_CODE = createField("division_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区域编码");

    /**
     * The column <code>ndt.t_banner.column</code>. 栏目id
     */
    public final TableField<TBannerRecord, Short> COLUMN = createField("column", org.jooq.impl.SQLDataType.SMALLINT, this, "栏目id");

    /**
     * The column <code>ndt.t_banner.id</code>. id
     */
    public final TableField<TBannerRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "id");

    /**
     * The column <code>ndt.t_banner.title</code>. banner图title
     */
    public final TableField<TBannerRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(100), this, "banner图title");

    /**
     * The column <code>ndt.t_banner.type</code>. banner图类型(1、无，2、外链，3、弹窗)
     */
    public final TableField<TBannerRecord, Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT, this, "banner图类型(1、无，2、外链，3、弹窗)");

    /**
     * The column <code>ndt.t_banner.img_url</code>. banner图链接
     */
    public final TableField<TBannerRecord, String> IMG_URL = createField("img_url", org.jooq.impl.SQLDataType.VARCHAR(200), this, "banner图链接");

    /**
     * The column <code>ndt.t_banner.href</code>. 外链链接
     */
    public final TableField<TBannerRecord, String> HREF = createField("href", org.jooq.impl.SQLDataType.VARCHAR(200), this, "外链链接");

    /**
     * The column <code>ndt.t_banner.status</code>. 状态(0、不可用，1、可用)
     */
    public final TableField<TBannerRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.field("'2'::smallint", org.jooq.impl.SQLDataType.SMALLINT)), this, "状态(0、不可用，1、可用)");

    /**
     * The column <code>ndt.t_banner.create_user</code>. 创建人
     */
    public final TableField<TBannerRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_banner.create_time</code>. 创建时间
     */
    public final TableField<TBannerRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_banner.update_user</code>. 更新人
     */
    public final TableField<TBannerRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "更新人");

    /**
     * The column <code>ndt.t_banner.update_time</code>. 更新时间
     */
    public final TableField<TBannerRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>ndt.t_banner.model_id</code>. 弹窗id
     */
    public final TableField<TBannerRecord, BigDecimal> MODEL_ID = createField("model_id", org.jooq.impl.SQLDataType.NUMERIC, this, "弹窗id");

    /**
     * The column <code>ndt.t_banner.old_sort</code>. 历史排序号
     */
    public final TableField<TBannerRecord, Integer> OLD_SORT = createField("old_sort", org.jooq.impl.SQLDataType.INTEGER, this, "历史排序号");

    /**
     * The column <code>ndt.t_banner.sort</code>. 排序号
     */
    public final TableField<TBannerRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER, this, "排序号");

    /**
     * Create a <code>ndt.t_banner</code> table reference
     */
    public TBanner() {
        this(DSL.name("t_banner"), null);
    }

    /**
     * Create an aliased <code>ndt.t_banner</code> table reference
     */
    public TBanner(String alias) {
        this(DSL.name(alias), T_BANNER);
    }

    /**
     * Create an aliased <code>ndt.t_banner</code> table reference
     */
    public TBanner(Name alias) {
        this(alias, T_BANNER);
    }

    private TBanner(Name alias, Table<TBannerRecord> aliased) {
        this(alias, aliased, null);
    }

    private TBanner(Name alias, Table<TBannerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "t_banner");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_BANNER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TBannerRecord> getPrimaryKey() {
        return Keys.PK_T_BANNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TBannerRecord>> getKeys() {
        return Arrays.<UniqueKey<TBannerRecord>>asList(Keys.PK_T_BANNER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBanner as(String alias) {
        return new TBanner(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBanner as(Name alias) {
        return new TBanner(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TBanner rename(String name) {
        return new TBanner(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TBanner rename(Name name) {
        return new TBanner(name, null);
    }
}
