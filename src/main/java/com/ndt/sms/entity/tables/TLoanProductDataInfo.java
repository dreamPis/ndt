/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanProductDataInfoRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanProductDataInfo extends TableImpl<TLoanProductDataInfoRecord> {

    private static final long serialVersionUID = -1253214060;

    /**
     * The reference instance of <code>ndt.t_loan_product_data_info</code>
     */
    public static final TLoanProductDataInfo T_LOAN_PRODUCT_DATA_INFO = new TLoanProductDataInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanProductDataInfoRecord> getRecordType() {
        return TLoanProductDataInfoRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_product_data_info.id</code>. 主键
     */
    public final TableField<TLoanProductDataInfoRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_loan_product_data_info.product_id</code>. 产品ID
     */
    public final TableField<TLoanProductDataInfoRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "产品ID");

    /**
     * The column <code>ndt.t_loan_product_data_info.product_features</code>. 产品特色
     */
    public final TableField<TLoanProductDataInfoRecord, String> PRODUCT_FEATURES = createField("product_features", org.jooq.impl.SQLDataType.CLOB, this, "产品特色");

    /**
     * The column <code>ndt.t_loan_product_data_info.product_apply_cond</code>. 申请条件
     */
    public final TableField<TLoanProductDataInfoRecord, String[]> PRODUCT_APPLY_COND = createField("product_apply_cond", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "申请条件");

    /**
     * The column <code>ndt.t_loan_product_data_info.product_apply_mate</code>. 申请材料
     */
    public final TableField<TLoanProductDataInfoRecord, String[]> PRODUCT_APPLY_MATE = createField("product_apply_mate", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "申请材料");

    /**
     * The column <code>ndt.t_loan_product_data_info.contact_number</code>. 客服联系电话
     */
    public final TableField<TLoanProductDataInfoRecord, String> CONTACT_NUMBER = createField("contact_number", org.jooq.impl.SQLDataType.VARCHAR, this, "客服联系电话");

    /**
     * The column <code>ndt.t_loan_product_data_info.work_date_start</code>. 工作时间开始
     */
    public final TableField<TLoanProductDataInfoRecord, String> WORK_DATE_START = createField("work_date_start", org.jooq.impl.SQLDataType.VARCHAR(15), this, "工作时间开始");

    /**
     * The column <code>ndt.t_loan_product_data_info.work_date_end</code>. 工作时间结束
     */
    public final TableField<TLoanProductDataInfoRecord, String> WORK_DATE_END = createField("work_date_end", org.jooq.impl.SQLDataType.VARCHAR(15), this, "工作时间结束");

    /**
     * Create a <code>ndt.t_loan_product_data_info</code> table reference
     */
    public TLoanProductDataInfo() {
        this(DSL.name("t_loan_product_data_info"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_product_data_info</code> table reference
     */
    public TLoanProductDataInfo(String alias) {
        this(DSL.name(alias), T_LOAN_PRODUCT_DATA_INFO);
    }

    /**
     * Create an aliased <code>ndt.t_loan_product_data_info</code> table reference
     */
    public TLoanProductDataInfo(Name alias) {
        this(alias, T_LOAN_PRODUCT_DATA_INFO);
    }

    private TLoanProductDataInfo(Name alias, Table<TLoanProductDataInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanProductDataInfo(Name alias, Table<TLoanProductDataInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_PRODUCT_DATA_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanProductDataInfoRecord> getPrimaryKey() {
        return Keys.T_LOAN_PRODUCT_DATA_INFO_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanProductDataInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanProductDataInfoRecord>>asList(Keys.T_LOAN_PRODUCT_DATA_INFO_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanProductDataInfo as(String alias) {
        return new TLoanProductDataInfo(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanProductDataInfo as(Name alias) {
        return new TLoanProductDataInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanProductDataInfo rename(String name) {
        return new TLoanProductDataInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanProductDataInfo rename(Name name) {
        return new TLoanProductDataInfo(name, null);
    }
}
