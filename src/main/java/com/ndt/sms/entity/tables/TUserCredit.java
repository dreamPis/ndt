/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TUserCreditRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户信用分数
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TUserCredit extends TableImpl<TUserCreditRecord> {

    private static final long serialVersionUID = 1018125074;

    /**
     * The reference instance of <code>ndt.t_user_credit</code>
     */
    public static final TUserCredit T_USER_CREDIT = new TUserCredit();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TUserCreditRecord> getRecordType() {
        return TUserCreditRecord.class;
    }

    /**
     * The column <code>ndt.t_user_credit.id</code>.
     */
    public final TableField<TUserCreditRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_user_credit.user_type</code>. 用户类型
     */
    public final TableField<TUserCreditRecord, Integer> USER_TYPE = createField("user_type", org.jooq.impl.SQLDataType.INTEGER, this, "用户类型");

    /**
     * The column <code>ndt.t_user_credit.user_id</code>. 用户id
     */
    public final TableField<TUserCreditRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "用户id");

    /**
     * The column <code>ndt.t_user_credit.contractual_capacity_score</code>. 履约能力分数
     */
    public final TableField<TUserCreditRecord, Integer> CONTRACTUAL_CAPACITY_SCORE = createField("contractual_capacity_score", org.jooq.impl.SQLDataType.INTEGER, this, "履约能力分数");

    /**
     * The column <code>ndt.t_user_credit.credit_history_score</code>. 信用历史分数
     */
    public final TableField<TUserCreditRecord, Integer> CREDIT_HISTORY_SCORE = createField("credit_history_score", org.jooq.impl.SQLDataType.INTEGER, this, "信用历史分数");

    /**
     * The column <code>ndt.t_user_credit.info_score</code>. 用户信息分数
     */
    public final TableField<TUserCreditRecord, Integer> INFO_SCORE = createField("info_score", org.jooq.impl.SQLDataType.INTEGER, this, "用户信息分数");

    /**
     * The column <code>ndt.t_user_credit.ndt_score</code>. 平台分数
     */
    public final TableField<TUserCreditRecord, Integer> NDT_SCORE = createField("ndt_score", org.jooq.impl.SQLDataType.INTEGER, this, "平台分数");

    /**
     * The column <code>ndt.t_user_credit.total_score</code>. 总分数
     */
    public final TableField<TUserCreditRecord, Integer> TOTAL_SCORE = createField("total_score", org.jooq.impl.SQLDataType.INTEGER, this, "总分数");

    /**
     * The column <code>ndt.t_user_credit.level</code>. 等级,参考码表45
     */
    public final TableField<TUserCreditRecord, Integer> LEVEL = createField("level", org.jooq.impl.SQLDataType.INTEGER, this, "等级,参考码表45");

    /**
     * The column <code>ndt.t_user_credit.status</code>.
     */
    public final TableField<TUserCreditRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>ndt.t_user_credit.create_user</code>.
     */
    public final TableField<TUserCreditRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_user_credit.create_time</code>.
     */
    public final TableField<TUserCreditRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_user_credit.update_user</code>.
     */
    public final TableField<TUserCreditRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_user_credit.update_time</code>.
     */
    public final TableField<TUserCreditRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>ndt.t_user_credit</code> table reference
     */
    public TUserCredit() {
        this(DSL.name("t_user_credit"), null);
    }

    /**
     * Create an aliased <code>ndt.t_user_credit</code> table reference
     */
    public TUserCredit(String alias) {
        this(DSL.name(alias), T_USER_CREDIT);
    }

    /**
     * Create an aliased <code>ndt.t_user_credit</code> table reference
     */
    public TUserCredit(Name alias) {
        this(alias, T_USER_CREDIT);
    }

    private TUserCredit(Name alias, Table<TUserCreditRecord> aliased) {
        this(alias, aliased, null);
    }

    private TUserCredit(Name alias, Table<TUserCreditRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "用户信用分数");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_USER_CREDIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TUserCreditRecord> getPrimaryKey() {
        return Keys.T_USER_CREDIT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TUserCreditRecord>> getKeys() {
        return Arrays.<UniqueKey<TUserCreditRecord>>asList(Keys.T_USER_CREDIT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUserCredit as(String alias) {
        return new TUserCredit(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TUserCredit as(Name alias) {
        return new TUserCredit(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TUserCredit rename(String name) {
        return new TUserCredit(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TUserCredit rename(Name name) {
        return new TUserCredit(name, null);
    }
}
