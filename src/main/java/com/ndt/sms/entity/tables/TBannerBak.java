/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TBannerBakRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * t_banner_bak
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBannerBak extends TableImpl<TBannerBakRecord> {

    private static final long serialVersionUID = 316499971;

    /**
     * The reference instance of <code>ndt.t_banner_bak</code>
     */
    public static final TBannerBak T_BANNER_BAK = new TBannerBak();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TBannerBakRecord> getRecordType() {
        return TBannerBakRecord.class;
    }

    /**
     * The column <code>ndt.t_banner_bak.division_code</code>. 区域编码
     */
    public final TableField<TBannerBakRecord, String> DIVISION_CODE = createField("division_code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "区域编码");

    /**
     * The column <code>ndt.t_banner_bak.column</code>. 栏目id
     */
    public final TableField<TBannerBakRecord, Short> COLUMN = createField("column", org.jooq.impl.SQLDataType.SMALLINT, this, "栏目id");

    /**
     * The column <code>ndt.t_banner_bak.id</code>. id
     */
    public final TableField<TBannerBakRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "id");

    /**
     * The column <code>ndt.t_banner_bak.title</code>. banner图title
     */
    public final TableField<TBannerBakRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(100), this, "banner图title");

    /**
     * The column <code>ndt.t_banner_bak.type</code>. banner图类型(1、无，2、外链，3、弹窗)
     */
    public final TableField<TBannerBakRecord, Short> TYPE = createField("type", org.jooq.impl.SQLDataType.SMALLINT, this, "banner图类型(1、无，2、外链，3、弹窗)");

    /**
     * The column <code>ndt.t_banner_bak.img_url</code>. banner图链接
     */
    public final TableField<TBannerBakRecord, String> IMG_URL = createField("img_url", org.jooq.impl.SQLDataType.VARCHAR(200), this, "banner图链接");

    /**
     * The column <code>ndt.t_banner_bak.href</code>. 外链链接
     */
    public final TableField<TBannerBakRecord, String> HREF = createField("href", org.jooq.impl.SQLDataType.VARCHAR(200), this, "外链链接");

    /**
     * The column <code>ndt.t_banner_bak.status</code>. 状态(0、不可用，1、可用)
     */
    public final TableField<TBannerBakRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT.defaultValue(org.jooq.impl.DSL.field("'2'::smallint", org.jooq.impl.SQLDataType.SMALLINT)), this, "状态(0、不可用，1、可用)");

    /**
     * The column <code>ndt.t_banner_bak.create_user</code>. 创建人
     */
    public final TableField<TBannerBakRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_banner_bak.create_time</code>. 创建时间
     */
    public final TableField<TBannerBakRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_banner_bak.update_user</code>. 更新人
     */
    public final TableField<TBannerBakRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "更新人");

    /**
     * The column <code>ndt.t_banner_bak.update_time</code>. 更新时间
     */
    public final TableField<TBannerBakRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * The column <code>ndt.t_banner_bak.model_id</code>. 弹窗id
     */
    public final TableField<TBannerBakRecord, BigDecimal> MODEL_ID = createField("model_id", org.jooq.impl.SQLDataType.NUMERIC, this, "弹窗id");

    /**
     * The column <code>ndt.t_banner_bak.old_sort</code>.
     */
    public final TableField<TBannerBakRecord, Integer> OLD_SORT = createField("old_sort", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>ndt.t_banner_bak.sort</code>.
     */
    public final TableField<TBannerBakRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>ndt.t_banner_bak</code> table reference
     */
    public TBannerBak() {
        this(DSL.name("t_banner_bak"), null);
    }

    /**
     * Create an aliased <code>ndt.t_banner_bak</code> table reference
     */
    public TBannerBak(String alias) {
        this(DSL.name(alias), T_BANNER_BAK);
    }

    /**
     * Create an aliased <code>ndt.t_banner_bak</code> table reference
     */
    public TBannerBak(Name alias) {
        this(alias, T_BANNER_BAK);
    }

    private TBannerBak(Name alias, Table<TBannerBakRecord> aliased) {
        this(alias, aliased, null);
    }

    private TBannerBak(Name alias, Table<TBannerBakRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "t_banner_bak");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PK_T_BANNER_BAK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TBannerBakRecord> getPrimaryKey() {
        return Keys.PK_T_BANNER_BAK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TBannerBakRecord>> getKeys() {
        return Arrays.<UniqueKey<TBannerBakRecord>>asList(Keys.PK_T_BANNER_BAK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBannerBak as(String alias) {
        return new TBannerBak(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBannerBak as(Name alias) {
        return new TBannerBak(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TBannerBak rename(String name) {
        return new TBannerBak(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TBannerBak rename(Name name) {
        return new TBannerBak(name, null);
    }
}
