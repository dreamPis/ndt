/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TOrderDetailRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 订单详情表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderDetail extends TableImpl<TOrderDetailRecord> {

    private static final long serialVersionUID = -493949508;

    /**
     * The reference instance of <code>ndt.t_order_detail</code>
     */
    public static final TOrderDetail T_ORDER_DETAIL = new TOrderDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderDetailRecord> getRecordType() {
        return TOrderDetailRecord.class;
    }

    /**
     * The column <code>ndt.t_order_detail.order_code</code>. 订单编号
     */
    public final TableField<TOrderDetailRecord, String> ORDER_CODE = createField("order_code", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "订单编号");

    /**
     * The column <code>ndt.t_order_detail.ware_code</code>. 产品编号
     */
    public final TableField<TOrderDetailRecord, BigDecimal> WARE_CODE = createField("ware_code", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "产品编号");

    /**
     * The column <code>ndt.t_order_detail.ware_num</code>. 商品数量
     */
    public final TableField<TOrderDetailRecord, Integer> WARE_NUM = createField("ware_num", org.jooq.impl.SQLDataType.INTEGER, this, "商品数量");

    /**
     * Create a <code>ndt.t_order_detail</code> table reference
     */
    public TOrderDetail() {
        this(DSL.name("t_order_detail"), null);
    }

    /**
     * Create an aliased <code>ndt.t_order_detail</code> table reference
     */
    public TOrderDetail(String alias) {
        this(DSL.name(alias), T_ORDER_DETAIL);
    }

    /**
     * Create an aliased <code>ndt.t_order_detail</code> table reference
     */
    public TOrderDetail(Name alias) {
        this(alias, T_ORDER_DETAIL);
    }

    private TOrderDetail(Name alias, Table<TOrderDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderDetail(Name alias, Table<TOrderDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "订单详情表");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_DETAIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderDetailRecord> getPrimaryKey() {
        return Keys.T_ORDER_DETAIL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderDetailRecord>>asList(Keys.T_ORDER_DETAIL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderDetail as(String alias) {
        return new TOrderDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderDetail as(Name alias) {
        return new TOrderDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderDetail rename(String name) {
        return new TOrderDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderDetail rename(Name name) {
        return new TOrderDetail(name, null);
    }
}
