/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables.records;


import com.ndt.sms.entity.tables.CSensitiveWords;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 敏感词
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CSensitiveWordsRecord extends UpdatableRecordImpl<CSensitiveWordsRecord> implements Record2<BigDecimal, String> {

    private static final long serialVersionUID = 1693057567;

    /**
     * Setter for <code>ndt.c_sensitive_words.id</code>.
     */
    public CSensitiveWordsRecord setId(BigDecimal value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_sensitive_words.id</code>.
     */
    public BigDecimal getId() {
        return (BigDecimal) get(0);
    }

    /**
     * Setter for <code>ndt.c_sensitive_words.word</code>. 分词
     */
    public CSensitiveWordsRecord setWord(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ndt.c_sensitive_words.word</code>. 分词
     */
    public String getWord() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<BigDecimal> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<BigDecimal, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<BigDecimal, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field1() {
        return CSensitiveWords.C_SENSITIVE_WORDS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CSensitiveWords.C_SENSITIVE_WORDS.WORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getWord();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CSensitiveWordsRecord value1(BigDecimal value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CSensitiveWordsRecord value2(String value) {
        setWord(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CSensitiveWordsRecord values(BigDecimal value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CSensitiveWordsRecord
     */
    public CSensitiveWordsRecord() {
        super(CSensitiveWords.C_SENSITIVE_WORDS);
    }

    /**
     * Create a detached, initialised CSensitiveWordsRecord
     */
    public CSensitiveWordsRecord(BigDecimal id, String word) {
        super(CSensitiveWords.C_SENSITIVE_WORDS);

        set(0, id);
        set(1, word);
    }
}
