/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TPolicyServiceMaterialRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 政策服务用户申请资料
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPolicyServiceMaterial extends TableImpl<TPolicyServiceMaterialRecord> {

    private static final long serialVersionUID = -1240641803;

    /**
     * The reference instance of <code>ndt.t_policy_service_material</code>
     */
    public static final TPolicyServiceMaterial T_POLICY_SERVICE_MATERIAL = new TPolicyServiceMaterial();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPolicyServiceMaterialRecord> getRecordType() {
        return TPolicyServiceMaterialRecord.class;
    }

    /**
     * The column <code>ndt.t_policy_service_material.id</code>. 唯一id
     */
    public final TableField<TPolicyServiceMaterialRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "唯一id");

    /**
     * The column <code>ndt.t_policy_service_material.policy_serv_id</code>. 政策服务id
     */
    public final TableField<TPolicyServiceMaterialRecord, BigDecimal> POLICY_SERV_ID = createField("policy_serv_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "政策服务id");

    /**
     * The column <code>ndt.t_policy_service_material.type_name</code>. 政策类别名称
     */
    public final TableField<TPolicyServiceMaterialRecord, String> TYPE_NAME = createField("type_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "政策类别名称");

    /**
     * The column <code>ndt.t_policy_service_material.type_group_id</code>. 政策类别分组
     */
    public final TableField<TPolicyServiceMaterialRecord, String> TYPE_GROUP_ID = createField("type_group_id", org.jooq.impl.SQLDataType.VARCHAR(100), this, "政策类别分组");

    /**
     * The column <code>ndt.t_policy_service_material.name</code>. 资料名称
     */
    public final TableField<TPolicyServiceMaterialRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "资料名称");

    /**
     * The column <code>ndt.t_policy_service_material.credentials</code>. 上传证件[]
     */
    public final TableField<TPolicyServiceMaterialRecord, String[]> CREDENTIALS = createField("credentials", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "上传证件[]");

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using <deprecationOnUnknownTypes/> in your code generator configuration.
     */
    @java.lang.Deprecated
    public final TableField<TPolicyServiceMaterialRecord, Object> TEMP_FILE = createField("temp_file", org.jooq.impl.SQLDataType.OTHER, this, "模板文件");

    /**
     * The column <code>ndt.t_policy_service_material.check_all</code>. 是否全选
     */
    public final TableField<TPolicyServiceMaterialRecord, Boolean> CHECK_ALL = createField("check_all", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "是否全选");

    /**
     * Create a <code>ndt.t_policy_service_material</code> table reference
     */
    public TPolicyServiceMaterial() {
        this(DSL.name("t_policy_service_material"), null);
    }

    /**
     * Create an aliased <code>ndt.t_policy_service_material</code> table reference
     */
    public TPolicyServiceMaterial(String alias) {
        this(DSL.name(alias), T_POLICY_SERVICE_MATERIAL);
    }

    /**
     * Create an aliased <code>ndt.t_policy_service_material</code> table reference
     */
    public TPolicyServiceMaterial(Name alias) {
        this(alias, T_POLICY_SERVICE_MATERIAL);
    }

    private TPolicyServiceMaterial(Name alias, Table<TPolicyServiceMaterialRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPolicyServiceMaterial(Name alias, Table<TPolicyServiceMaterialRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "政策服务用户申请资料");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_POLICY_SERVICE_MATERIAL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPolicyServiceMaterialRecord> getPrimaryKey() {
        return Keys.T_POLICY_SERVICE_MATERIAL_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPolicyServiceMaterialRecord>> getKeys() {
        return Arrays.<UniqueKey<TPolicyServiceMaterialRecord>>asList(Keys.T_POLICY_SERVICE_MATERIAL_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPolicyServiceMaterial as(String alias) {
        return new TPolicyServiceMaterial(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPolicyServiceMaterial as(Name alias) {
        return new TPolicyServiceMaterial(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPolicyServiceMaterial rename(String name) {
        return new TPolicyServiceMaterial(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPolicyServiceMaterial rename(Name name) {
        return new TPolicyServiceMaterial(name, null);
    }
}
