/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TInsureLoanProductRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 保险信贷产品
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TInsureLoanProduct extends TableImpl<TInsureLoanProductRecord> {

    private static final long serialVersionUID = 2135610289;

    /**
     * The reference instance of <code>ndt.t_insure_loan_product</code>
     */
    public static final TInsureLoanProduct T_INSURE_LOAN_PRODUCT = new TInsureLoanProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TInsureLoanProductRecord> getRecordType() {
        return TInsureLoanProductRecord.class;
    }

    /**
     * The column <code>ndt.t_insure_loan_product.id</code>.
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_insure_loan_product.name</code>. 产品名称
     */
    public final TableField<TInsureLoanProductRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "产品名称");

    /**
     * The column <code>ndt.t_insure_loan_product.org_id</code>. 金融机构ID
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "金融机构ID");

    /**
     * The column <code>ndt.t_insure_loan_product.logo_img_id</code>. 产品LOGO文件id
     */
    public final TableField<TInsureLoanProductRecord, String> LOGO_IMG_ID = createField("logo_img_id", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "产品LOGO文件id");

    /**
     * The column <code>ndt.t_insure_loan_product.product_type</code>. 产品类型,参考码表大类33
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> PRODUCT_TYPE = createField("product_type", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "产品类型,参考码表大类33");

    /**
     * The column <code>ndt.t_insure_loan_product.product_code</code>. 产品代码
     */
    public final TableField<TInsureLoanProductRecord, String> PRODUCT_CODE = createField("product_code", org.jooq.impl.SQLDataType.VARCHAR(50), this, "产品代码");

    /**
     * The column <code>ndt.t_insure_loan_product.mix_amount</code>. 最小额度
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> MIX_AMOUNT = createField("mix_amount", org.jooq.impl.SQLDataType.NUMERIC.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "最小额度");

    /**
     * The column <code>ndt.t_insure_loan_product.max_amount</code>. 最大额度
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> MAX_AMOUNT = createField("max_amount", org.jooq.impl.SQLDataType.NUMERIC.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.NUMERIC)), this, "最大额度");

    /**
     * The column <code>ndt.t_insure_loan_product.term</code>. 贷款期限
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> TERM = createField("term", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "贷款期限");

    /**
     * The column <code>ndt.t_insure_loan_product.term_unit</code>. 期限单位
     */
    public final TableField<TInsureLoanProductRecord, Integer> TERM_UNIT = createField("term_unit", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "期限单位");

    /**
     * The column <code>ndt.t_insure_loan_product.rate</code>. 利率
     */
    public final TableField<TInsureLoanProductRecord, String> RATE = createField("rate", org.jooq.impl.SQLDataType.VARCHAR(15).nullable(false), this, "利率");

    /**
     * The column <code>ndt.t_insure_loan_product.product_to</code>. 贷款对象
     */
    public final TableField<TInsureLoanProductRecord, Integer[]> PRODUCT_TO = createField("product_to", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "贷款对象");

    /**
     * The column <code>ndt.t_insure_loan_product.loan_type</code>. 贷款方式
     */
    public final TableField<TInsureLoanProductRecord, Integer[]> LOAN_TYPE = createField("loan_type", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "贷款方式");

    /**
     * The column <code>ndt.t_insure_loan_product.labels</code>. 产品标签
     */
    public final TableField<TInsureLoanProductRecord, Integer[]> LABELS = createField("labels", org.jooq.impl.SQLDataType.INTEGER.getArrayDataType(), this, "产品标签");

    /**
     * The column <code>ndt.t_insure_loan_product.payback_type</code>. 还款方式
     */
    public final TableField<TInsureLoanProductRecord, Integer> PAYBACK_TYPE = createField("payback_type", org.jooq.impl.SQLDataType.INTEGER, this, "还款方式");

    /**
     * The column <code>ndt.t_insure_loan_product.remark</code>. 描述
     */
    public final TableField<TInsureLoanProductRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "描述");

    /**
     * The column <code>ndt.t_insure_loan_product.divisions</code>. 服务区域
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal[]> DIVISIONS = createField("divisions", org.jooq.impl.SQLDataType.NUMERIC.getArrayDataType(), this, "服务区域");

    /**
     * The column <code>ndt.t_insure_loan_product.create_by</code>. 创建人
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "创建人");

    /**
     * The column <code>ndt.t_insure_loan_product.create_at</code>. 创建时间
     */
    public final TableField<TInsureLoanProductRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>ndt.t_insure_loan_product.update_by</code>. 更新人
     */
    public final TableField<TInsureLoanProductRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "更新人");

    /**
     * The column <code>ndt.t_insure_loan_product.update_at</code>. 更新时间
     */
    public final TableField<TInsureLoanProductRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * The column <code>ndt.t_insure_loan_product.status</code>. 产品状态
     */
    public final TableField<TInsureLoanProductRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.INTEGER)), this, "产品状态");

    /**
     * Create a <code>ndt.t_insure_loan_product</code> table reference
     */
    public TInsureLoanProduct() {
        this(DSL.name("t_insure_loan_product"), null);
    }

    /**
     * Create an aliased <code>ndt.t_insure_loan_product</code> table reference
     */
    public TInsureLoanProduct(String alias) {
        this(DSL.name(alias), T_INSURE_LOAN_PRODUCT);
    }

    /**
     * Create an aliased <code>ndt.t_insure_loan_product</code> table reference
     */
    public TInsureLoanProduct(Name alias) {
        this(alias, T_INSURE_LOAN_PRODUCT);
    }

    private TInsureLoanProduct(Name alias, Table<TInsureLoanProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private TInsureLoanProduct(Name alias, Table<TInsureLoanProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "保险信贷产品");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_INSURE_LOAN_PRODUCT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TInsureLoanProductRecord> getPrimaryKey() {
        return Keys.T_INSURE_LOAN_PRODUCT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TInsureLoanProductRecord>> getKeys() {
        return Arrays.<UniqueKey<TInsureLoanProductRecord>>asList(Keys.T_INSURE_LOAN_PRODUCT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TInsureLoanProduct as(String alias) {
        return new TInsureLoanProduct(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TInsureLoanProduct as(Name alias) {
        return new TInsureLoanProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TInsureLoanProduct rename(String name) {
        return new TInsureLoanProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TInsureLoanProduct rename(Name name) {
        return new TInsureLoanProduct(name, null);
    }
}
