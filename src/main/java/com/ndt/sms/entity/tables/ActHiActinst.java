/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.ActHiActinstRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActHiActinst extends TableImpl<ActHiActinstRecord> {

    private static final long serialVersionUID = 1968718405;

    /**
     * The reference instance of <code>ndt.act_hi_actinst</code>
     */
    public static final ActHiActinst ACT_HI_ACTINST = new ActHiActinst();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActHiActinstRecord> getRecordType() {
        return ActHiActinstRecord.class;
    }

    /**
     * The column <code>ndt.act_hi_actinst.id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> ID_ = createField("id_", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.proc_def_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> PROC_DEF_ID_ = createField("proc_def_id_", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.proc_inst_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> PROC_INST_ID_ = createField("proc_inst_id_", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.execution_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> EXECUTION_ID_ = createField("execution_id_", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.act_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> ACT_ID_ = createField("act_id_", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.task_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> TASK_ID_ = createField("task_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.call_proc_inst_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> CALL_PROC_INST_ID_ = createField("call_proc_inst_id_", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.act_name_</code>.
     */
    public final TableField<ActHiActinstRecord, String> ACT_NAME_ = createField("act_name_", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.act_type_</code>.
     */
    public final TableField<ActHiActinstRecord, String> ACT_TYPE_ = createField("act_type_", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.assignee_</code>.
     */
    public final TableField<ActHiActinstRecord, String> ASSIGNEE_ = createField("assignee_", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.start_time_</code>.
     */
    public final TableField<ActHiActinstRecord, Timestamp> START_TIME_ = createField("start_time_", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>ndt.act_hi_actinst.end_time_</code>.
     */
    public final TableField<ActHiActinstRecord, Timestamp> END_TIME_ = createField("end_time_", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.act_hi_actinst.duration_</code>.
     */
    public final TableField<ActHiActinstRecord, Long> DURATION_ = createField("duration_", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>ndt.act_hi_actinst.tenant_id_</code>.
     */
    public final TableField<ActHiActinstRecord, String> TENANT_ID_ = createField("tenant_id_", org.jooq.impl.SQLDataType.VARCHAR(255).defaultValue(org.jooq.impl.DSL.field("''::character varying", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * Create a <code>ndt.act_hi_actinst</code> table reference
     */
    public ActHiActinst() {
        this(DSL.name("act_hi_actinst"), null);
    }

    /**
     * Create an aliased <code>ndt.act_hi_actinst</code> table reference
     */
    public ActHiActinst(String alias) {
        this(DSL.name(alias), ACT_HI_ACTINST);
    }

    /**
     * Create an aliased <code>ndt.act_hi_actinst</code> table reference
     */
    public ActHiActinst(Name alias) {
        this(alias, ACT_HI_ACTINST);
    }

    private ActHiActinst(Name alias, Table<ActHiActinstRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActHiActinst(Name alias, Table<ActHiActinstRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACT_HI_ACTINST_PKEY, Indexes.ACT_IDX_HI_ACT_INST_END, Indexes.ACT_IDX_HI_ACT_INST_EXEC, Indexes.ACT_IDX_HI_ACT_INST_PROCINST, Indexes.ACT_IDX_HI_ACT_INST_START);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ActHiActinstRecord> getPrimaryKey() {
        return Keys.ACT_HI_ACTINST_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ActHiActinstRecord>> getKeys() {
        return Arrays.<UniqueKey<ActHiActinstRecord>>asList(Keys.ACT_HI_ACTINST_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActHiActinst as(String alias) {
        return new ActHiActinst(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ActHiActinst as(Name alias) {
        return new ActHiActinst(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiActinst rename(String name) {
        return new ActHiActinst(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActHiActinst rename(Name name) {
        return new ActHiActinst(name, null);
    }
}
