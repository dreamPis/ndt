/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TFarmRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 农场
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFarm extends TableImpl<TFarmRecord> {

    private static final long serialVersionUID = 1136499995;

    /**
     * The reference instance of <code>ndt.t_farm</code>
     */
    public static final TFarm T_FARM = new TFarm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TFarmRecord> getRecordType() {
        return TFarmRecord.class;
    }

    /**
     * The column <code>ndt.t_farm.id</code>.
     */
    public final TableField<TFarmRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_farm.county</code>. 区（市）县
     */
    public final TableField<TFarmRecord, String> COUNTY = createField("county", org.jooq.impl.SQLDataType.VARCHAR(50), this, "区（市）县");

    /**
     * The column <code>ndt.t_farm.county_code</code>.
     */
    public final TableField<TFarmRecord, BigDecimal> COUNTY_CODE = createField("county_code", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_farm.town</code>. 乡镇
     */
    public final TableField<TFarmRecord, String> TOWN = createField("town", org.jooq.impl.SQLDataType.VARCHAR(50), this, "乡镇");

    /**
     * The column <code>ndt.t_farm.town_code</code>.
     */
    public final TableField<TFarmRecord, BigDecimal> TOWN_CODE = createField("town_code", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_farm.name</code>. 农场名称
     */
    public final TableField<TFarmRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(40), this, "农场名称");

    /**
     * The column <code>ndt.t_farm.address</code>. 农场地址
     */
    public final TableField<TFarmRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(80), this, "农场地址");

    /**
     * The column <code>ndt.t_farm.grade</code>. 农场等级
     */
    public final TableField<TFarmRecord, String> GRADE = createField("grade", org.jooq.impl.SQLDataType.VARCHAR(80), this, "农场等级");

    /**
     * The column <code>ndt.t_farm.assessment_time</code>. 获评时间
     */
    public final TableField<TFarmRecord, String> ASSESSMENT_TIME = createField("assessment_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "获评时间");

    /**
     * The column <code>ndt.t_farm.farmer_name</code>. 农场主姓名
     */
    public final TableField<TFarmRecord, String> FARMER_NAME = createField("farmer_name", org.jooq.impl.SQLDataType.VARCHAR(150), this, "农场主姓名");

    /**
     * The column <code>ndt.t_farm.identity_id</code>. 身份证号码
     */
    public final TableField<TFarmRecord, String> IDENTITY_ID = createField("identity_id", org.jooq.impl.SQLDataType.VARCHAR(20), this, "身份证号码");

    /**
     * The column <code>ndt.t_farm.phone</code>. 手机号码
     */
    public final TableField<TFarmRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "手机号码");

    /**
     * The column <code>ndt.t_farm.fixed_phone</code>. 固定电话
     */
    public final TableField<TFarmRecord, String> FIXED_PHONE = createField("fixed_phone", org.jooq.impl.SQLDataType.VARCHAR(20), this, "固定电话");

    /**
     * The column <code>ndt.t_farm.postal_code</code>. 邮政编码
     */
    public final TableField<TFarmRecord, String> POSTAL_CODE = createField("postal_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "邮政编码");

    /**
     * The column <code>ndt.t_farm.industry_category</code>. 产业类别
     */
    public final TableField<TFarmRecord, String> INDUSTRY_CATEGORY = createField("industry_category", org.jooq.impl.SQLDataType.VARCHAR(150), this, "产业类别");

    /**
     * The column <code>ndt.t_farm.two_level_category</code>. 二级类别
     */
    public final TableField<TFarmRecord, String> TWO_LEVEL_CATEGORY = createField("two_level_category", org.jooq.impl.SQLDataType.VARCHAR(150), this, "二级类别");

    /**
     * The column <code>ndt.t_farm.main_products</code>. 主营产品
     */
    public final TableField<TFarmRecord, String> MAIN_PRODUCTS = createField("main_products", org.jooq.impl.SQLDataType.VARCHAR(150), this, "主营产品");

    /**
     * The column <code>ndt.t_farm.business_regis_time</code>. 工商登记时间
     */
    public final TableField<TFarmRecord, String> BUSINESS_REGIS_TIME = createField("business_regis_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "工商登记时间");

    /**
     * The column <code>ndt.t_farm.business_regis_department</code>. 工商登记部门
     */
    public final TableField<TFarmRecord, String> BUSINESS_REGIS_DEPARTMENT = createField("business_regis_department", org.jooq.impl.SQLDataType.VARCHAR(20), this, "工商登记部门");

    /**
     * The column <code>ndt.t_farm.business_regis_number</code>. 工商登记号码
     */
    public final TableField<TFarmRecord, String> BUSINESS_REGIS_NUMBER = createField("business_regis_number", org.jooq.impl.SQLDataType.VARCHAR(20), this, "工商登记号码");

    /**
     * The column <code>ndt.t_farm.business_regis_type</code>. 工商登记类型
     */
    public final TableField<TFarmRecord, String> BUSINESS_REGIS_TYPE = createField("business_regis_type", org.jooq.impl.SQLDataType.VARCHAR(20), this, "工商登记类型");

    /**
     * The column <code>ndt.t_farm.regis_capital</code>. 注册资金（万元）
     */
    public final TableField<TFarmRecord, String> REGIS_CAPITAL = createField("regis_capital", org.jooq.impl.SQLDataType.VARCHAR(150), this, "注册资金（万元）");

    /**
     * The column <code>ndt.t_farm.product_area</code>. 产品总面积（亩）
     */
    public final TableField<TFarmRecord, String> PRODUCT_AREA = createField("product_area", org.jooq.impl.SQLDataType.VARCHAR(150), this, "产品总面积（亩）");

    /**
     * The column <code>ndt.t_farm.product_total</code>. 产品总量（头/只/株/人次）
     */
    public final TableField<TFarmRecord, String> PRODUCT_TOTAL = createField("product_total", org.jooq.impl.SQLDataType.VARCHAR(150), this, "产品总量（头/只/株/人次）");

    /**
     * The column <code>ndt.t_farm.land_transfer_area</code>. 土地流转面积（亩）
     */
    public final TableField<TFarmRecord, String> LAND_TRANSFER_AREA = createField("land_transfer_area", org.jooq.impl.SQLDataType.VARCHAR(150), this, "土地流转面积（亩）");

    /**
     * The column <code>ndt.t_farm.land_transfer_period</code>. 土地流转年限（年）
     */
    public final TableField<TFarmRecord, String> LAND_TRANSFER_PERIOD = createField("land_transfer_period", org.jooq.impl.SQLDataType.VARCHAR(150), this, "土地流转年限（年）");

    /**
     * The column <code>ndt.t_farm.total_assets</code>. 总资产（万元）
     */
    public final TableField<TFarmRecord, String> TOTAL_ASSETS = createField("total_assets", org.jooq.impl.SQLDataType.VARCHAR(150), this, "总资产（万元）");

    /**
     * The column <code>ndt.t_farm.fixed_assets</code>. 固定资产（万元）
     */
    public final TableField<TFarmRecord, String> FIXED_ASSETS = createField("fixed_assets", org.jooq.impl.SQLDataType.VARCHAR(150), this, "固定资产（万元）");

    /**
     * The column <code>ndt.t_farm.previous_year_incometotal</code>. 上年总收入（万元）
     */
    public final TableField<TFarmRecord, String> PREVIOUS_YEAR_INCOMETOTAL = createField("previous_year_incometotal", org.jooq.impl.SQLDataType.VARCHAR(150), this, "上年总收入（万元）");

    /**
     * The column <code>ndt.t_farm.previous_year_expendtotal</code>. 上年总支出（万元）
     */
    public final TableField<TFarmRecord, String> PREVIOUS_YEAR_EXPENDTOTAL = createField("previous_year_expendtotal", org.jooq.impl.SQLDataType.VARCHAR(150), this, "上年总支出（万元）");

    /**
     * The column <code>ndt.t_farm.previous_year_netprofit</code>. 上年净利润（万元）
     */
    public final TableField<TFarmRecord, String> PREVIOUS_YEAR_NETPROFIT = createField("previous_year_netprofit", org.jooq.impl.SQLDataType.VARCHAR(150), this, "上年净利润（万元）");

    /**
     * The column <code>ndt.t_farm.family_avgincome</code>. 家庭成员人均收入（万元）
     */
    public final TableField<TFarmRecord, String> FAMILY_AVGINCOME = createField("family_avgincome", org.jooq.impl.SQLDataType.VARCHAR(150), this, "家庭成员人均收入（万元）");

    /**
     * The column <code>ndt.t_farm.employees_number</code>. 常年雇工人数（个）
     */
    public final TableField<TFarmRecord, String> EMPLOYEES_NUMBER = createField("employees_number", org.jooq.impl.SQLDataType.VARCHAR(150), this, "常年雇工人数（个）");

    /**
     * The column <code>ndt.t_farm.employees_temnumber</code>. 临时雇工人数（个）
     */
    public final TableField<TFarmRecord, String> EMPLOYEES_TEMNUMBER = createField("employees_temnumber", org.jooq.impl.SQLDataType.VARCHAR(150), this, "临时雇工人数（个）");

    /**
     * The column <code>ndt.t_farm.poll_certification</code>. 无公害等产品认证
     */
    public final TableField<TFarmRecord, String> POLL_CERTIFICATION = createField("poll_certification", org.jooq.impl.SQLDataType.VARCHAR(500), this, "无公害等产品认证");

    /**
     * The column <code>ndt.t_farm.establishment</code>. 制度建立
     */
    public final TableField<TFarmRecord, String> ESTABLISHMENT = createField("establishment", org.jooq.impl.SQLDataType.VARCHAR(500), this, "制度建立");

    /**
     * The column <code>ndt.t_farm.brand_identification</code>. 品牌认定
     */
    public final TableField<TFarmRecord, String> BRAND_IDENTIFICATION = createField("brand_identification", org.jooq.impl.SQLDataType.VARCHAR(100), this, "品牌认定");

    /**
     * The column <code>ndt.t_farm.construction</code>. 农场建设情况
     */
    public final TableField<TFarmRecord, String> CONSTRUCTION = createField("construction", org.jooq.impl.SQLDataType.VARCHAR(200), this, "农场建设情况");

    /**
     * The column <code>ndt.t_farm.fac_equ_certification</code>. 设施/设备证明材料
     */
    public final TableField<TFarmRecord, String> FAC_EQU_CERTIFICATION = createField("fac_equ_certification", org.jooq.impl.SQLDataType.VARCHAR(500), this, "设施/设备证明材料");

    /**
     * The column <code>ndt.t_farm.creditcode</code>. 信用代码
     */
    public final TableField<TFarmRecord, String> CREDITCODE = createField("creditcode", org.jooq.impl.SQLDataType.VARCHAR(20), this, "信用代码");

    /**
     * The column <code>ndt.t_farm.regno</code>. 注册号
     */
    public final TableField<TFarmRecord, String> REGNO = createField("regno", org.jooq.impl.SQLDataType.VARCHAR(20), this, "注册号");

    /**
     * The column <code>ndt.t_farm.remark</code>. 评论/备注
     */
    public final TableField<TFarmRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(150), this, "评论/备注");

    /**
     * The column <code>ndt.t_farm.state</code>. 1、未审核，2、审核通过，3、审核不通过
     */
    public final TableField<TFarmRecord, Short> STATE = createField("state", org.jooq.impl.SQLDataType.SMALLINT, this, "1、未审核，2、审核通过，3、审核不通过");

    /**
     * The column <code>ndt.t_farm.status</code>.
     */
    public final TableField<TFarmRecord, Short> STATUS = createField("status", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>ndt.t_farm.create_user</code>.
     */
    public final TableField<TFarmRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_farm.create_time</code>.
     */
    public final TableField<TFarmRecord, String> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>ndt.t_farm.update_user</code>.
     */
    public final TableField<TFarmRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_farm.update_time</code>.
     */
    public final TableField<TFarmRecord, String> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>ndt.t_farm.community</code>. 社区或村
     */
    public final TableField<TFarmRecord, String> COMMUNITY = createField("community", org.jooq.impl.SQLDataType.VARCHAR(50), this, "社区或村");

    /**
     * The column <code>ndt.t_farm.community_id</code>. 社区或村id
     */
    public final TableField<TFarmRecord, BigDecimal> COMMUNITY_ID = createField("community_id", org.jooq.impl.SQLDataType.NUMERIC, this, "社区或村id");

    /**
     * The column <code>ndt.t_farm.is_major</code>. 是否新型经营主体
     */
    public final TableField<TFarmRecord, Boolean> IS_MAJOR = createField("is_major", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否新型经营主体");

    /**
     * The column <code>ndt.t_farm.is_credit</code>. 是否信用主体
     */
    public final TableField<TFarmRecord, Boolean> IS_CREDIT = createField("is_credit", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否信用主体");

    /**
     * Create a <code>ndt.t_farm</code> table reference
     */
    public TFarm() {
        this(DSL.name("t_farm"), null);
    }

    /**
     * Create an aliased <code>ndt.t_farm</code> table reference
     */
    public TFarm(String alias) {
        this(DSL.name(alias), T_FARM);
    }

    /**
     * Create an aliased <code>ndt.t_farm</code> table reference
     */
    public TFarm(Name alias) {
        this(alias, T_FARM);
    }

    private TFarm(Name alias, Table<TFarmRecord> aliased) {
        this(alias, aliased, null);
    }

    private TFarm(Name alias, Table<TFarmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "农场");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_FARM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TFarmRecord> getPrimaryKey() {
        return Keys.T_FARM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TFarmRecord>> getKeys() {
        return Arrays.<UniqueKey<TFarmRecord>>asList(Keys.T_FARM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFarm as(String alias) {
        return new TFarm(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFarm as(Name alias) {
        return new TFarm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TFarm rename(String name) {
        return new TFarm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TFarm rename(Name name) {
        return new TFarm(name, null);
    }
}
