/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TPolicyServiceApplyRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 政策服务申请
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPolicyServiceApply extends TableImpl<TPolicyServiceApplyRecord> {

    private static final long serialVersionUID = -581645588;

    /**
     * The reference instance of <code>ndt.t_policy_service_apply</code>
     */
    public static final TPolicyServiceApply T_POLICY_SERVICE_APPLY = new TPolicyServiceApply();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPolicyServiceApplyRecord> getRecordType() {
        return TPolicyServiceApplyRecord.class;
    }

    /**
     * The column <code>ndt.t_policy_service_apply.id</code>. 唯一id
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "唯一id");

    /**
     * The column <code>ndt.t_policy_service_apply.policy_serv_id</code>. 政策id
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> POLICY_SERV_ID = createField("policy_serv_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "政策id");

    /**
     * The column <code>ndt.t_policy_service_apply.policy_type_id</code>. 政策类型
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> POLICY_TYPE_ID = createField("policy_type_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "政策类型");

    /**
     * The column <code>ndt.t_policy_service_apply.policy_type_name</code>. 政策类型名称
     */
    public final TableField<TPolicyServiceApplyRecord, String> POLICY_TYPE_NAME = createField("policy_type_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "政策类型名称");

    /**
     * The column <code>ndt.t_policy_service_apply.company_id</code>. 申请的公司id
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请的公司id");

    /**
     * The column <code>ndt.t_policy_service_apply.mobile</code>. 联系电话
     */
    public final TableField<TPolicyServiceApplyRecord, String> MOBILE = createField("mobile", org.jooq.impl.SQLDataType.VARCHAR(20), this, "联系电话");

    /**
     * The column <code>ndt.t_policy_service_apply.division_id</code>. 地区id
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> DIVISION_ID = createField("division_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "地区id");

    /**
     * The column <code>ndt.t_policy_service_apply.status</code>. 状态
     */
    public final TableField<TPolicyServiceApplyRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态");

    /**
     * The column <code>ndt.t_policy_service_apply.note</code>. 备注说明
     */
    public final TableField<TPolicyServiceApplyRecord, String> NOTE = createField("note", org.jooq.impl.SQLDataType.VARCHAR(200), this, "备注说明");

    /**
     * The column <code>ndt.t_policy_service_apply.material</code>. 上传资料
     */
    public final TableField<TPolicyServiceApplyRecord, String> MATERIAL = createField("material", org.jooq.impl.SQLDataType.CLOB, this, "上传资料");

    /**
     * The column <code>ndt.t_policy_service_apply.user_id</code>. 用户id
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "用户id");

    /**
     * The column <code>ndt.t_policy_service_apply.update_user</code>. 更新用户id
     */
    public final TableField<TPolicyServiceApplyRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "更新用户id");

    /**
     * The column <code>ndt.t_policy_service_apply.create_time</code>. 创建时间
     */
    public final TableField<TPolicyServiceApplyRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_policy_service_apply.update_time</code>. 更新时间
     */
    public final TableField<TPolicyServiceApplyRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "更新时间");

    /**
     * Create a <code>ndt.t_policy_service_apply</code> table reference
     */
    public TPolicyServiceApply() {
        this(DSL.name("t_policy_service_apply"), null);
    }

    /**
     * Create an aliased <code>ndt.t_policy_service_apply</code> table reference
     */
    public TPolicyServiceApply(String alias) {
        this(DSL.name(alias), T_POLICY_SERVICE_APPLY);
    }

    /**
     * Create an aliased <code>ndt.t_policy_service_apply</code> table reference
     */
    public TPolicyServiceApply(Name alias) {
        this(alias, T_POLICY_SERVICE_APPLY);
    }

    private TPolicyServiceApply(Name alias, Table<TPolicyServiceApplyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPolicyServiceApply(Name alias, Table<TPolicyServiceApplyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "政策服务申请");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_POLICY_SERVICE_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPolicyServiceApplyRecord> getPrimaryKey() {
        return Keys.T_POLICY_SERVICE_APPLY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPolicyServiceApplyRecord>> getKeys() {
        return Arrays.<UniqueKey<TPolicyServiceApplyRecord>>asList(Keys.T_POLICY_SERVICE_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPolicyServiceApply as(String alias) {
        return new TPolicyServiceApply(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPolicyServiceApply as(Name alias) {
        return new TPolicyServiceApply(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPolicyServiceApply rename(String name) {
        return new TPolicyServiceApply(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPolicyServiceApply rename(Name name) {
        return new TPolicyServiceApply(name, null);
    }
}
