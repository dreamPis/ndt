/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TPolicyServiceRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 政策服务
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPolicyService extends TableImpl<TPolicyServiceRecord> {

    private static final long serialVersionUID = 1164253089;

    /**
     * The reference instance of <code>ndt.t_policy_service</code>
     */
    public static final TPolicyService T_POLICY_SERVICE = new TPolicyService();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPolicyServiceRecord> getRecordType() {
        return TPolicyServiceRecord.class;
    }

    /**
     * The column <code>ndt.t_policy_service.id</code>.
     */
    public final TableField<TPolicyServiceRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_policy_service.name</code>. 政策名称
     */
    public final TableField<TPolicyServiceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "政策名称");

    /**
     * The column <code>ndt.t_policy_service.type</code>. 政策类型
     */
    public final TableField<TPolicyServiceRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "政策类型");

    /**
     * The column <code>ndt.t_policy_service.org_id</code>. 所属机构id
     */
    public final TableField<TPolicyServiceRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "所属机构id");

    /**
     * The column <code>ndt.t_policy_service.key_words</code>. 关键字
     */
    public final TableField<TPolicyServiceRecord, String> KEY_WORDS = createField("key_words", org.jooq.impl.SQLDataType.VARCHAR(100), this, "关键字");

    /**
     * The column <code>ndt.t_policy_service.accept_org_name</code>. 受理单位名称
     */
    public final TableField<TPolicyServiceRecord, String> ACCEPT_ORG_NAME = createField("accept_org_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "受理单位名称");

    /**
     * The column <code>ndt.t_policy_service.accept_division_ids</code>. 受理地区id
     */
    public final TableField<TPolicyServiceRecord, BigDecimal[]> ACCEPT_DIVISION_IDS = createField("accept_division_ids", org.jooq.impl.SQLDataType.NUMERIC.getArrayDataType(), this, "受理地区id");

    /**
     * The column <code>ndt.t_policy_service.accept_division_names</code>. 受理地区名称
     */
    public final TableField<TPolicyServiceRecord, String[]> ACCEPT_DIVISION_NAMES = createField("accept_division_names", org.jooq.impl.SQLDataType.VARCHAR.getArrayDataType(), this, "受理地区名称");

    /**
     * The column <code>ndt.t_policy_service.fee_scale</code>. 收费标准
     */
    public final TableField<TPolicyServiceRecord, String> FEE_SCALE = createField("fee_scale", org.jooq.impl.SQLDataType.VARCHAR(400), this, "收费标准");

    /**
     * The column <code>ndt.t_policy_service.priority</code>. 优先级
     */
    public final TableField<TPolicyServiceRecord, Integer> PRIORITY = createField("priority", org.jooq.impl.SQLDataType.INTEGER, this, "优先级");

    /**
     * The column <code>ndt.t_policy_service.status</code>. 状态
     */
    public final TableField<TPolicyServiceRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER, this, "状态");

    /**
     * The column <code>ndt.t_policy_service.content</code>. 内容介绍
     */
    public final TableField<TPolicyServiceRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "内容介绍");

    /**
     * The column <code>ndt.t_policy_service.accept_start_time</code>. 受理开始时间
     */
    public final TableField<TPolicyServiceRecord, Timestamp> ACCEPT_START_TIME = createField("accept_start_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "受理开始时间");

    /**
     * The column <code>ndt.t_policy_service.accept_end_time</code>. 受理结束时间
     */
    public final TableField<TPolicyServiceRecord, Timestamp> ACCEPT_END_TIME = createField("accept_end_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "受理结束时间");

    /**
     * The column <code>ndt.t_policy_service.create_user</code>.
     */
    public final TableField<TPolicyServiceRecord, BigDecimal> CREATE_USER = createField("create_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_policy_service.update_user</code>.
     */
    public final TableField<TPolicyServiceRecord, BigDecimal> UPDATE_USER = createField("update_user", org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>ndt.t_policy_service.create_time</code>.
     */
    public final TableField<TPolicyServiceRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_policy_service.update_time</code>.
     */
    public final TableField<TPolicyServiceRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>ndt.t_policy_service.accept_type</code>. 接受类型企业or个人
     */
    public final TableField<TPolicyServiceRecord, Integer> ACCEPT_TYPE = createField("accept_type", org.jooq.impl.SQLDataType.INTEGER, this, "接受类型企业or个人");

    /**
     * The column <code>ndt.t_policy_service.accept_org_id</code>. 受理机构id
     */
    public final TableField<TPolicyServiceRecord, BigDecimal> ACCEPT_ORG_ID = createField("accept_org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "受理机构id");

    /**
     * Create a <code>ndt.t_policy_service</code> table reference
     */
    public TPolicyService() {
        this(DSL.name("t_policy_service"), null);
    }

    /**
     * Create an aliased <code>ndt.t_policy_service</code> table reference
     */
    public TPolicyService(String alias) {
        this(DSL.name(alias), T_POLICY_SERVICE);
    }

    /**
     * Create an aliased <code>ndt.t_policy_service</code> table reference
     */
    public TPolicyService(Name alias) {
        this(alias, T_POLICY_SERVICE);
    }

    private TPolicyService(Name alias, Table<TPolicyServiceRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPolicyService(Name alias, Table<TPolicyServiceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "政策服务");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_POLICY_SERVICE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPolicyServiceRecord> getPrimaryKey() {
        return Keys.T_POLICY_SERVICE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPolicyServiceRecord>> getKeys() {
        return Arrays.<UniqueKey<TPolicyServiceRecord>>asList(Keys.T_POLICY_SERVICE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPolicyService as(String alias) {
        return new TPolicyService(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPolicyService as(Name alias) {
        return new TPolicyService(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPolicyService rename(String name) {
        return new TPolicyService(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPolicyService rename(Name name) {
        return new TPolicyService(name, null);
    }
}
