/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TStandardRateRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 基准利率变化时间区间 
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TStandardRate extends TableImpl<TStandardRateRecord> {

    private static final long serialVersionUID = -1342904822;

    /**
     * The reference instance of <code>ndt.t_standard_rate</code>
     */
    public static final TStandardRate T_STANDARD_RATE = new TStandardRate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TStandardRateRecord> getRecordType() {
        return TStandardRateRecord.class;
    }

    /**
     * The column <code>ndt.t_standard_rate.id</code>. 主键
     */
    public final TableField<TStandardRateRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_standard_rate.start_date</code>. 开始时间
     */
    public final TableField<TStandardRateRecord, Timestamp> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "开始时间");

    /**
     * The column <code>ndt.t_standard_rate.end_date</code>. 结束时间
     */
    public final TableField<TStandardRateRecord, Timestamp> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "结束时间");

    /**
     * The column <code>ndt.t_standard_rate.rate</code>. 利率
     */
    public final TableField<TStandardRateRecord, BigDecimal> RATE = createField("rate", org.jooq.impl.SQLDataType.NUMERIC, this, "利率");

    /**
     * The column <code>ndt.t_standard_rate.create_at</code>. 创建时间
     */
    public final TableField<TStandardRateRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_standard_rate.create_by</code>. 创建人
     */
    public final TableField<TStandardRateRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_standard_rate.update_at</code>. 修改时间
     */
    public final TableField<TStandardRateRecord, Timestamp> UPDATE_AT = createField("update_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>ndt.t_standard_rate.update_by</code>. 修改人
     */
    public final TableField<TStandardRateRecord, BigDecimal> UPDATE_BY = createField("update_by", org.jooq.impl.SQLDataType.NUMERIC, this, "修改人");

    /**
     * Create a <code>ndt.t_standard_rate</code> table reference
     */
    public TStandardRate() {
        this(DSL.name("t_standard_rate"), null);
    }

    /**
     * Create an aliased <code>ndt.t_standard_rate</code> table reference
     */
    public TStandardRate(String alias) {
        this(DSL.name(alias), T_STANDARD_RATE);
    }

    /**
     * Create an aliased <code>ndt.t_standard_rate</code> table reference
     */
    public TStandardRate(Name alias) {
        this(alias, T_STANDARD_RATE);
    }

    private TStandardRate(Name alias, Table<TStandardRateRecord> aliased) {
        this(alias, aliased, null);
    }

    private TStandardRate(Name alias, Table<TStandardRateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "基准利率变化时间区间 ");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_STANDARD_RATE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TStandardRateRecord> getPrimaryKey() {
        return Keys.T_STANDARD_RATE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TStandardRateRecord>> getKeys() {
        return Arrays.<UniqueKey<TStandardRateRecord>>asList(Keys.T_STANDARD_RATE_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStandardRate as(String alias) {
        return new TStandardRate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStandardRate as(Name alias) {
        return new TStandardRate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TStandardRate rename(String name) {
        return new TStandardRate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TStandardRate rename(Name name) {
        return new TStandardRate(name, null);
    }
}
