/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanRecordRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 放款记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanRecord extends TableImpl<TLoanRecordRecord> {

    private static final long serialVersionUID = 460650907;

    /**
     * The reference instance of <code>ndt.t_loan_record</code>
     */
    public static final TLoanRecord T_LOAN_RECORD = new TLoanRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanRecordRecord> getRecordType() {
        return TLoanRecordRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_record.id</code>. id
     */
    public final TableField<TLoanRecordRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "id");

    /**
     * The column <code>ndt.t_loan_record.invitation_id</code>. 邀约id
     */
    public final TableField<TLoanRecordRecord, BigDecimal> INVITATION_ID = createField("invitation_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "邀约id");

    /**
     * The column <code>ndt.t_loan_record.loan_done_id</code>. 放款id同t_loan_done_id
     */
    public final TableField<TLoanRecordRecord, BigDecimal> LOAN_DONE_ID = createField("loan_done_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "放款id同t_loan_done_id");

    /**
     * The column <code>ndt.t_loan_record.loan_money</code>.  放款金额
     */
    public final TableField<TLoanRecordRecord, BigDecimal> LOAN_MONEY = createField("loan_money", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, " 放款金额");

    /**
     * The column <code>ndt.t_loan_record.loan_time</code>. 放款时间
     */
    public final TableField<TLoanRecordRecord, Timestamp> LOAN_TIME = createField("loan_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "放款时间");

    /**
     * The column <code>ndt.t_loan_record.create_user_id</code>. 操作人
     */
    public final TableField<TLoanRecordRecord, BigDecimal> CREATE_USER_ID = createField("create_user_id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "操作人");

    /**
     * Create a <code>ndt.t_loan_record</code> table reference
     */
    public TLoanRecord() {
        this(DSL.name("t_loan_record"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_record</code> table reference
     */
    public TLoanRecord(String alias) {
        this(DSL.name(alias), T_LOAN_RECORD);
    }

    /**
     * Create an aliased <code>ndt.t_loan_record</code> table reference
     */
    public TLoanRecord(Name alias) {
        this(alias, T_LOAN_RECORD);
    }

    private TLoanRecord(Name alias, Table<TLoanRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanRecord(Name alias, Table<TLoanRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "放款记录");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_RECORD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanRecordRecord> getPrimaryKey() {
        return Keys.T_LOAN_RECORD_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanRecordRecord>>asList(Keys.T_LOAN_RECORD_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanRecord as(String alias) {
        return new TLoanRecord(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanRecord as(Name alias) {
        return new TLoanRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanRecord rename(String name) {
        return new TLoanRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanRecord rename(Name name) {
        return new TLoanRecord(name, null);
    }
}
