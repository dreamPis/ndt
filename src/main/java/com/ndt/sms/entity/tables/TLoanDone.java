/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanDoneRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 贷款成交记录
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanDone extends TableImpl<TLoanDoneRecord> {

    private static final long serialVersionUID = 1712788865;

    /**
     * The reference instance of <code>ndt.t_loan_done</code>
     */
    public static final TLoanDone T_LOAN_DONE = new TLoanDone();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanDoneRecord> getRecordType() {
        return TLoanDoneRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_done.id</code>.
     */
    public final TableField<TLoanDoneRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_loan_done.user_id</code>. 申请用户ID
     */
    public final TableField<TLoanDoneRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请用户ID");

    /**
     * The column <code>ndt.t_loan_done.invitation_id</code>. 邀约ID
     */
    public final TableField<TLoanDoneRecord, BigDecimal> INVITATION_ID = createField("invitation_id", org.jooq.impl.SQLDataType.NUMERIC, this, "邀约ID");

    /**
     * The column <code>ndt.t_loan_done.loan_apply_id</code>. 贷款申请ID
     */
    public final TableField<TLoanDoneRecord, BigDecimal> LOAN_APPLY_ID = createField("loan_apply_id", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款申请ID");

    /**
     * The column <code>ndt.t_loan_done.org_id</code>. 贷款机构ID
     */
    public final TableField<TLoanDoneRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款机构ID");

    /**
     * The column <code>ndt.t_loan_done.actual_amount</code>. 实际放款金额(元)
     */
    public final TableField<TLoanDoneRecord, BigDecimal> ACTUAL_AMOUNT = createField("actual_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "实际放款金额(元)");

    /**
     * The column <code>ndt.t_loan_done.create_by</code>. 创建者
     */
    public final TableField<TLoanDoneRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建者");

    /**
     * The column <code>ndt.t_loan_done.create_at</code>. 创建时间
     */
    public final TableField<TLoanDoneRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_loan_done.state</code>. 贷后状态,见码表69
     */
    public final TableField<TLoanDoneRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER, this, "贷后状态,见码表69");

    /**
     * The column <code>ndt.t_loan_done.riskshare_done_id</code>. 风险分担放款ID
     */
    public final TableField<TLoanDoneRecord, BigDecimal> RISKSHARE_DONE_ID = createField("riskshare_done_id", org.jooq.impl.SQLDataType.NUMERIC, this, "风险分担放款ID");

    /**
     * The column <code>ndt.t_loan_done.apply_source</code>. 申请来源,7301:ndt,7302:花盟,7303:方米
     */
    public final TableField<TLoanDoneRecord, Integer> APPLY_SOURCE = createField("apply_source", org.jooq.impl.SQLDataType.INTEGER, this, "申请来源,7301:ndt,7302:花盟,7303:方米");

    /**
     * The column <code>ndt.t_loan_done.company_id</code>. 企业ID
     */
    public final TableField<TLoanDoneRecord, BigDecimal> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.NUMERIC, this, "企业ID");

    /**
     * The column <code>ndt.t_loan_done.division_id</code>. 地区id
     */
    public final TableField<TLoanDoneRecord, BigDecimal> DIVISION_ID = createField("division_id", org.jooq.impl.SQLDataType.NUMERIC, this, "地区id");

    /**
     * The column <code>ndt.t_loan_done.division_name</code>. 地区名字
     */
    public final TableField<TLoanDoneRecord, String> DIVISION_NAME = createField("division_name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "地区名字");

    /**
     * Create a <code>ndt.t_loan_done</code> table reference
     */
    public TLoanDone() {
        this(DSL.name("t_loan_done"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_done</code> table reference
     */
    public TLoanDone(String alias) {
        this(DSL.name(alias), T_LOAN_DONE);
    }

    /**
     * Create an aliased <code>ndt.t_loan_done</code> table reference
     */
    public TLoanDone(Name alias) {
        this(alias, T_LOAN_DONE);
    }

    private TLoanDone(Name alias, Table<TLoanDoneRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanDone(Name alias, Table<TLoanDoneRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "贷款成交记录");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_DONE_PKEY, Indexes.T_LOAN_DONE_UQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanDoneRecord> getPrimaryKey() {
        return Keys.T_LOAN_DONE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanDoneRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanDoneRecord>>asList(Keys.T_LOAN_DONE_PKEY, Keys.T_LOAN_DONE_UQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanDone as(String alias) {
        return new TLoanDone(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanDone as(Name alias) {
        return new TLoanDone(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanDone rename(String name) {
        return new TLoanDone(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanDone rename(Name name) {
        return new TLoanDone(name, null);
    }
}
