/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TFinancialApplyRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFinancialApply extends TableImpl<TFinancialApplyRecord> {

    private static final long serialVersionUID = 596731186;

    /**
     * The reference instance of <code>ndt.t_financial_apply</code>
     */
    public static final TFinancialApply T_FINANCIAL_APPLY = new TFinancialApply();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TFinancialApplyRecord> getRecordType() {
        return TFinancialApplyRecord.class;
    }

    /**
     * The column <code>ndt.t_financial_apply.id</code>. 主键
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "主键");

    /**
     * The column <code>ndt.t_financial_apply.user_id</code>. 申请用户ID
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请用户ID");

    /**
     * The column <code>ndt.t_financial_apply.company_id</code>. 申请用户公司ID
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请用户公司ID");

    /**
     * The column <code>ndt.t_financial_apply.org_id</code>. 机构ID
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "机构ID");

    /**
     * The column <code>ndt.t_financial_apply.product_id</code>. 产品ID
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC, this, "产品ID");

    /**
     * The column <code>ndt.t_financial_apply.amount</code>. 申请金额
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC, this, "申请金额");

    /**
     * The column <code>ndt.t_financial_apply.period</code>. 贷款状态(参照码表38)
     */
    public final TableField<TFinancialApplyRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER, this, "贷款状态(参照码表38)");

    /**
     * The column <code>ndt.t_financial_apply.accept_time</code>. 受理时间
     */
    public final TableField<TFinancialApplyRecord, Timestamp> ACCEPT_TIME = createField("accept_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "受理时间");

    /**
     * The column <code>ndt.t_financial_apply.last_update_time</code>. 最后修改时间
     */
    public final TableField<TFinancialApplyRecord, Timestamp> LAST_UPDATE_TIME = createField("last_update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最后修改时间");

    /**
     * The column <code>ndt.t_financial_apply.state</code>. 流程状态
     */
    public final TableField<TFinancialApplyRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER, this, "流程状态");

    /**
     * The column <code>ndt.t_financial_apply.create_by</code>. 创建人
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建人");

    /**
     * The column <code>ndt.t_financial_apply.source_id</code>. 申请来源(参照码表70)
     */
    public final TableField<TFinancialApplyRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER, this, "申请来源(参照码表70)");

    /**
     * The column <code>ndt.t_financial_apply.diviison_id</code>. 申请所属区域ID
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> DIVIISON_ID = createField("diviison_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请所属区域ID");

    /**
     * The column <code>ndt.t_financial_apply.division_name</code>. 申请区域名
     */
    public final TableField<TFinancialApplyRecord, String> DIVISION_NAME = createField("division_name", org.jooq.impl.SQLDataType.VARCHAR(20), this, "申请区域名");

    /**
     * The column <code>ndt.t_financial_apply.accept_amount</code>. 受理金额
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> ACCEPT_AMOUNT = createField("accept_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "受理金额");

    /**
     * The column <code>ndt.t_financial_apply.bank_org_id</code>. 放款银行机构ID
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> BANK_ORG_ID = createField("bank_org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "放款银行机构ID");

    /**
     * The column <code>ndt.t_financial_apply.apply_time</code>. 申请时间
     */
    public final TableField<TFinancialApplyRecord, Timestamp> APPLY_TIME = createField("apply_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "申请时间");

    /**
     * The column <code>ndt.t_financial_apply.bank_accept_state</code>. 银行受理流程状态
     */
    public final TableField<TFinancialApplyRecord, Integer> BANK_ACCEPT_STATE = createField("bank_accept_state", org.jooq.impl.SQLDataType.INTEGER, this, "银行受理流程状态");

    /**
     * The column <code>ndt.t_financial_apply.bank_accept_period</code>. 银行受理状态(参照码表38)
     */
    public final TableField<TFinancialApplyRecord, Integer> BANK_ACCEPT_PERIOD = createField("bank_accept_period", org.jooq.impl.SQLDataType.INTEGER, this, "银行受理状态(参照码表38)");

    /**
     * The column <code>ndt.t_financial_apply.apply_purpost</code>. 申请用途(参照码表21)
     */
    public final TableField<TFinancialApplyRecord, Integer> APPLY_PURPOST = createField("apply_purpost", org.jooq.impl.SQLDataType.INTEGER, this, "申请用途(参照码表21)");

    /**
     * The column <code>ndt.t_financial_apply.apply_term</code>. 申请期限
     */
    public final TableField<TFinancialApplyRecord, Integer> APPLY_TERM = createField("apply_term", org.jooq.impl.SQLDataType.INTEGER, this, "申请期限");

    /**
     * The column <code>ndt.t_financial_apply.remark</code>. 担保描述
     */
    public final TableField<TFinancialApplyRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(150), this, "担保描述");

    /**
     * The column <code>ndt.t_financial_apply.apply_type</code>. 申请类型(参照码表82)
     */
    public final TableField<TFinancialApplyRecord, Integer> APPLY_TYPE = createField("apply_type", org.jooq.impl.SQLDataType.INTEGER, this, "申请类型(参照码表82)");

    /**
     * The column <code>ndt.t_financial_apply.bank_accept_amount</code>. 银行受理金额
     */
    public final TableField<TFinancialApplyRecord, BigDecimal> BANK_ACCEPT_AMOUNT = createField("bank_accept_amount", org.jooq.impl.SQLDataType.NUMERIC, this, "银行受理金额");

    /**
     * Create a <code>ndt.t_financial_apply</code> table reference
     */
    public TFinancialApply() {
        this(DSL.name("t_financial_apply"), null);
    }

    /**
     * Create an aliased <code>ndt.t_financial_apply</code> table reference
     */
    public TFinancialApply(String alias) {
        this(DSL.name(alias), T_FINANCIAL_APPLY);
    }

    /**
     * Create an aliased <code>ndt.t_financial_apply</code> table reference
     */
    public TFinancialApply(Name alias) {
        this(alias, T_FINANCIAL_APPLY);
    }

    private TFinancialApply(Name alias, Table<TFinancialApplyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TFinancialApply(Name alias, Table<TFinancialApplyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_FINANCIAL_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TFinancialApplyRecord> getPrimaryKey() {
        return Keys.T_FINANCIAL_APPLY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TFinancialApplyRecord>> getKeys() {
        return Arrays.<UniqueKey<TFinancialApplyRecord>>asList(Keys.T_FINANCIAL_APPLY_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFinancialApply as(String alias) {
        return new TFinancialApply(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFinancialApply as(Name alias) {
        return new TFinancialApply(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TFinancialApply rename(String name) {
        return new TFinancialApply(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TFinancialApply rename(Name name) {
        return new TFinancialApply(name, null);
    }
}
