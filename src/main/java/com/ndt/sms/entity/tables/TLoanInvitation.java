/*
 * This file is generated by jOOQ.
*/
package com.ndt.sms.entity.tables;


import com.ndt.sms.entity.Indexes;
import com.ndt.sms.entity.Keys;
import com.ndt.sms.entity.Ndt;
import com.ndt.sms.entity.tables.records.TLoanInvitationRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * T_LOAN_INVITATION
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TLoanInvitation extends TableImpl<TLoanInvitationRecord> {

    private static final long serialVersionUID = 536157709;

    /**
     * The reference instance of <code>ndt.t_loan_invitation</code>
     */
    public static final TLoanInvitation T_LOAN_INVITATION = new TLoanInvitation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TLoanInvitationRecord> getRecordType() {
        return TLoanInvitationRecord.class;
    }

    /**
     * The column <code>ndt.t_loan_invitation.id</code>.
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> ID = createField("id", org.jooq.impl.SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>ndt.t_loan_invitation.code</code>. 业务代码编号
     */
    public final TableField<TLoanInvitationRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(20), this, "业务代码编号");

    /**
     * The column <code>ndt.t_loan_invitation.loan_apply_id</code>. 贷款申请ID
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> LOAN_APPLY_ID = createField("loan_apply_id", org.jooq.impl.SQLDataType.NUMERIC, this, "贷款申请ID");

    /**
     * The column <code>ndt.t_loan_invitation.type</code>. 邀约类型,参考码表大类37
     */
    public final TableField<TLoanInvitationRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "邀约类型,参考码表大类37");

    /**
     * The column <code>ndt.t_loan_invitation.org_id</code>. 金融机构ID
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> ORG_ID = createField("org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "金融机构ID");

    /**
     * The column <code>ndt.t_loan_invitation.product_id</code>. 金融产品ID
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.NUMERIC, this, "金融产品ID");

    /**
     * The column <code>ndt.t_loan_invitation.user_id</code>. 申请用户ID
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> USER_ID = createField("user_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请用户ID");

    /**
     * The column <code>ndt.t_loan_invitation.msg</code>. 邀约信息
     */
    public final TableField<TLoanInvitationRecord, String> MSG = createField("msg", org.jooq.impl.SQLDataType.VARCHAR(200), this, "邀约信息");

    /**
     * The column <code>ndt.t_loan_invitation.phone_no</code>. 邀约电话
     */
    public final TableField<TLoanInvitationRecord, String> PHONE_NO = createField("phone_no", org.jooq.impl.SQLDataType.VARCHAR(30), this, "邀约电话");

    /**
     * The column <code>ndt.t_loan_invitation.amount</code>. 预计提供金额
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.NUMERIC, this, "预计提供金额");

    /**
     * The column <code>ndt.t_loan_invitation.period</code>. 邀约所处阶段,参考码表大类38
     */
    public final TableField<TLoanInvitationRecord, Integer> PERIOD = createField("period", org.jooq.impl.SQLDataType.INTEGER, this, "邀约所处阶段,参考码表大类38");

    /**
     * The column <code>ndt.t_loan_invitation.state</code>. 邀约所处状态
     */
    public final TableField<TLoanInvitationRecord, Integer> STATE = createField("state", org.jooq.impl.SQLDataType.INTEGER, this, "邀约所处状态");

    /**
     * The column <code>ndt.t_loan_invitation.accept_time</code>. 受理时间
     */
    public final TableField<TLoanInvitationRecord, Timestamp> ACCEPT_TIME = createField("accept_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "受理时间");

    /**
     * The column <code>ndt.t_loan_invitation.last_update_time</code>. 最近更新时间
     */
    public final TableField<TLoanInvitationRecord, Timestamp> LAST_UPDATE_TIME = createField("last_update_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "最近更新时间");

    /**
     * The column <code>ndt.t_loan_invitation.create_by</code>. 创建者
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> CREATE_BY = createField("create_by", org.jooq.impl.SQLDataType.NUMERIC, this, "创建者");

    /**
     * The column <code>ndt.t_loan_invitation.create_at</code>. 创建时间
     */
    public final TableField<TLoanInvitationRecord, Timestamp> CREATE_AT = createField("create_at", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>ndt.t_loan_invitation.handle_type</code>. 当前邀约处理方式
     */
    public final TableField<TLoanInvitationRecord, Integer> HANDLE_TYPE = createField("handle_type", org.jooq.impl.SQLDataType.INTEGER, this, "当前邀约处理方式");

    /**
     * The column <code>ndt.t_loan_invitation.source_id</code>. 来源,PC app
     */
    public final TableField<TLoanInvitationRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER, this, "来源,PC app");

    /**
     * The column <code>ndt.t_loan_invitation.apply_source</code>. 申请来源,7301:ndt,7302:花盟,7303:方米
     */
    public final TableField<TLoanInvitationRecord, Integer> APPLY_SOURCE = createField("apply_source", org.jooq.impl.SQLDataType.INTEGER, this, "申请来源,7301:ndt,7302:花盟,7303:方米");

    /**
     * The column <code>ndt.t_loan_invitation.is_guarantee</code>. 是否担保
     */
    public final TableField<TLoanInvitationRecord, Boolean> IS_GUARANTEE = createField("is_guarantee", org.jooq.impl.SQLDataType.BOOLEAN, this, "是否担保");

    /**
     * The column <code>ndt.t_loan_invitation.guarantee_type</code>. 担保类型
     */
    public final TableField<TLoanInvitationRecord, Integer> GUARANTEE_TYPE = createField("guarantee_type", org.jooq.impl.SQLDataType.INTEGER, this, "担保类型");

    /**
     * The column <code>ndt.t_loan_invitation.guarantee_org_id</code>. 机构id
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> GUARANTEE_ORG_ID = createField("guarantee_org_id", org.jooq.impl.SQLDataType.NUMERIC, this, "机构id");

    /**
     * The column <code>ndt.t_loan_invitation.guarantee_org_name</code>. 机构名
     */
    public final TableField<TLoanInvitationRecord, String> GUARANTEE_ORG_NAME = createField("guarantee_org_name", org.jooq.impl.SQLDataType.VARCHAR(100), this, "机构名");

    /**
     * The column <code>ndt.t_loan_invitation.guarantee_org_code</code>. 机构信用代码
     */
    public final TableField<TLoanInvitationRecord, String> GUARANTEE_ORG_CODE = createField("guarantee_org_code", org.jooq.impl.SQLDataType.VARCHAR(100), this, "机构信用代码");

    /**
     * The column <code>ndt.t_loan_invitation.company_id</code>. 企业ID
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> COMPANY_ID = createField("company_id", org.jooq.impl.SQLDataType.NUMERIC, this, "企业ID");

    /**
     * The column <code>ndt.t_loan_invitation.guarantor_identity</code>. 担保人身份证
     */
    public final TableField<TLoanInvitationRecord, String> GUARANTOR_IDENTITY = createField("guarantor_identity", org.jooq.impl.SQLDataType.VARCHAR(20), this, "担保人身份证");

    /**
     * The column <code>ndt.t_loan_invitation.division_id</code>. 地区id
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> DIVISION_ID = createField("division_id", org.jooq.impl.SQLDataType.NUMERIC, this, "地区id");

    /**
     * The column <code>ndt.t_loan_invitation.division_name</code>. 地区名字
     */
    public final TableField<TLoanInvitationRecord, String> DIVISION_NAME = createField("division_name", org.jooq.impl.SQLDataType.VARCHAR(60), this, "地区名字");

    /**
     * The column <code>ndt.t_loan_invitation.apply_from</code>. 申请来源于(参照码表82)
     */
    public final TableField<TLoanInvitationRecord, Integer> APPLY_FROM = createField("apply_from", org.jooq.impl.SQLDataType.INTEGER, this, "申请来源于(参照码表82)");

    /**
     * The column <code>ndt.t_loan_invitation.come_from_desc</code>. 信息来源于
     */
    public final TableField<TLoanInvitationRecord, String> COME_FROM_DESC = createField("come_from_desc", org.jooq.impl.SQLDataType.VARCHAR(120), this, "信息来源于");

    /**
     * The column <code>ndt.t_loan_invitation.apply_from_id</code>. 申请来源于ID
     */
    public final TableField<TLoanInvitationRecord, BigDecimal> APPLY_FROM_ID = createField("apply_from_id", org.jooq.impl.SQLDataType.NUMERIC, this, "申请来源于ID");

    /**
     * Create a <code>ndt.t_loan_invitation</code> table reference
     */
    public TLoanInvitation() {
        this(DSL.name("t_loan_invitation"), null);
    }

    /**
     * Create an aliased <code>ndt.t_loan_invitation</code> table reference
     */
    public TLoanInvitation(String alias) {
        this(DSL.name(alias), T_LOAN_INVITATION);
    }

    /**
     * Create an aliased <code>ndt.t_loan_invitation</code> table reference
     */
    public TLoanInvitation(Name alias) {
        this(alias, T_LOAN_INVITATION);
    }

    private TLoanInvitation(Name alias, Table<TLoanInvitationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TLoanInvitation(Name alias, Table<TLoanInvitationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "T_LOAN_INVITATION");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Ndt.NDT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_LOAN_INVITATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TLoanInvitationRecord> getPrimaryKey() {
        return Keys.T_LOAN_INVITATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TLoanInvitationRecord>> getKeys() {
        return Arrays.<UniqueKey<TLoanInvitationRecord>>asList(Keys.T_LOAN_INVITATION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanInvitation as(String alias) {
        return new TLoanInvitation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TLoanInvitation as(Name alias) {
        return new TLoanInvitation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanInvitation rename(String name) {
        return new TLoanInvitation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TLoanInvitation rename(Name name) {
        return new TLoanInvitation(name, null);
    }
}
